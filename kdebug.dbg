krita(25754)/krita (plugins) KisGeneratorRegistry::add: adding  "Color"
krita(25754)/krita (plugins) KisGeneratorRegistry::add: adding  "Color"  with id  "color"
krita(25754)/krita (core) KisImage::KisImage: creating ""
krita(25754)/krita (core) KisImage::~KisImage: deleting kisimage ""
krita(25754)/krita (core) KisImage::KisImage: creating ""
krita(25754)/krita (core) KisImage::~KisImage: deleting kisimage ""
krita(25754)/krita (plugins) SpecificColorSelectorPlugin::SpecificColorSelectorPlugin: SpecificColorSelectorPlugin
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush004.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush004" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">9.1</param> <param name="HairyBristle/shear">1.02</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0.39" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="4" hfade="0.5" diameter="10.09"/> </Brush> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="runtimeCanvasRotation"><![CDATA[0]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "9.1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "1.02")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0.39" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="4" hfade="0.5" diameter="10.09"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush002o19346.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush002" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">9.1</param> <param name="HairyBristle/shear">1.02</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0.39" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="4" hfade="0.5" diameter="21.09"/> </Brush> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "9.1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "1.02")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0.39" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="4" hfade="0.5" diameter="21.09"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush007.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush007" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">8.27</param> <param name="HairyBristle/scale">10</param> <param name="HairyBristle/shear">1.02</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="drawingangle"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor id="fuzzy"> <curve>0.0281124,0;1,1;</curve> </ChildSensor> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.208835,0.0562249;0.759036,0.915663;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="0.8" type="gbr_brush" BrushVersion="2" filename="Sc_Scratches_2.gbr" spacing="0.03" angle="0"/> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="requiredBrushFile"><![CDATA[Sc_Scratches_2.gbr]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "8.27")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "10")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "1.02")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="drawingangle"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor id="fuzzy"> <curve>0.0281124,0;1,1;</curve> </ChildSensor> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.208835,0.0562249;0.759036,0.915663;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="0.8" type="gbr_brush" BrushVersion="2" filename="Sc_Scratches_2.gbr" spacing="0.03" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "Sc_Scratches_2.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush011.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush011" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">10</param> <param name="HairyBristle/shear">0</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.586345,0.86747;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle3.gbr]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "10")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.586345,0.86747;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle3.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush010.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush010" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">0.04</param> <param name="HairyBristle/scale">-10</param> <param name="HairyBristle/shear">1.02</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <ChildSensor periodic="1" length="8822" id="distance"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor id="drawingangle"> <curve>0,0;1,1;</curve> </ChildSensor> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="0.6" type="gbr_brush" BrushVersion="2" filename="D_Dust_1.gih" spacing="0.3" angle="0"/> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="requiredBrushFile"><![CDATA[D_Dust_1.gih]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "0.04")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "-10")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "1.02")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <ChildSensor periodic="1" length="8822" id="distance"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor id="drawingangle"> <curve>0,0;1,1;</curve> </ChildSensor> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="0.6" type="gbr_brush" BrushVersion="2" filename="D_Dust_1.gih" spacing="0.3" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "D_Dust_1.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush012.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush012" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">10</param> <param name="HairyBristle/shear">0</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.421687,0.694779;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle3.gbr]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "10")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.421687,0.694779;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle3.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush003.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush003" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">9.1</param> <param name="HairyBristle/shear">1.02</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0.39" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="4" hfade="0.5" diameter="10.09"/> </Brush> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="runtimeCanvasRotation"><![CDATA[0]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "9.1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "1.02")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0.39" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="4" hfade="0.5" diameter="10.09"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/bla.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="bla" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveDarken"><![CDATA[0,0;1,1;]]></param> <param name="CurveMix"><![CDATA[0,0;1,1;]]></param> <param name="CurveOpacity"><![CDATA[0,0;1,1;]]></param> <param name="CurveRotation"><![CDATA[0,0;1,1;]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomDarken"><![CDATA[true]]></param> <param name="CustomMix"><![CDATA[true]]></param> <param name="CustomOpacity"><![CDATA[true]]></param> <param name="CustomRotation"><![CDATA[true]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">1</param> <param name="HorizontalMirrorEnabled">false</param> <param name="KisPresisionOption/precisionLevel">4</param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="PaintOpAction">2</param> <param name="PressureDarken">false</param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">true</param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">5</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">4</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="Texture/Pattern/CutoffLeft">0</param> <param name="Texture/Pattern/CutoffPolicy">0</param> <param name="Texture/Pattern/CutoffRight">255</param> <param name="Texture/Pattern/Enabled">false</param> <param name="Texture/Pattern/Invert">false</param> <param name="Texture/Pattern/Name"><![CDATA[Canvas 01]]></param> <param name="Texture/Pattern/OffsetX">0</param> <param name="Texture/Pattern/OffsetY">0</param> <param name="Texture/Pattern/Pattern"></param> <param name="Texture/Pattern/PatternFileName"><![CDATA[/home/boud/kde/master/share/apps/krita/patterns/Canvas_01.pat]]></param> <param name="Texture/Pattern/Scale">1</param> <param name="Texture/Pattern/Strength">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0.4" density="0.55" BrushVersion="2" spacing="0.1" angle="1.88496"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="10" hfade="0.5" diameter="47.51"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>
"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveDarken"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveMix"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveOpacity"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveRotation"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomDarken"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomMix"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "KisPresisionOption/precisionLevel"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffLeft"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffPolicy"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffRight"  =  QVariant(QString, "255")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Invert"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Name"  =  QVariant(QString, "Canvas 01")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetX"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetY"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Pattern"  =  QVariant(QString, "
")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/PatternFileName"  =  QVariant(QString, "/home/boud/kde/master/share/apps/krita/patterns/Canvas_01.pat")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Scale"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Strength"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0.4" density="0.55" BrushVersion="2" spacing="0.1" angle="1.88496"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="10" hfade="0.5" diameter="47.51"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush002.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush002" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">9.1</param> <param name="HairyBristle/shear">1.02</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0.39" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="4" hfade="0.5" diameter="21.09"/> </Brush> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "9.1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "1.02")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0.39" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="4" hfade="0.5" diameter="21.09"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush005.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush005" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">10</param> <param name="HairyBristle/shear">0</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle3.gbr]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "10")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle3.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush017.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush017" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">10</param> <param name="HairyBristle/shear">0</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.373494,0.228916;0.73494,0.791165;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.441767,0.060241;0.859438,0.574297;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle3.gbr]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "10")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.373494,0.228916;0.73494,0.791165;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.441767,0.060241;0.859438,0.574297;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle3.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush006.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush006" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">8.27</param> <param name="HairyBristle/scale">10</param> <param name="HairyBristle/shear">1.02</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="drawingangle"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor id="fuzzy"> <curve>0,0;0.281124,0.562249;1,1;</curve> </ChildSensor> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="D_Dust_Particles.gih" spacing="0.2" angle="0"/> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="requiredBrushFile"><![CDATA[D_Dust_Particles.gih]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "8.27")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "10")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "1.02")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="drawingangle"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor id="fuzzy"> <curve>0,0;0.281124,0.562249;1,1;</curve> </ChildSensor> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="D_Dust_Particles.gih" spacing="0.2" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "D_Dust_Particles.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush003T19346.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush003" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">9.1</param> <param name="HairyBristle/shear">1.02</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0.39" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="4" hfade="0.5" diameter="10.09"/> </Brush> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="runtimeCanvasRotation"><![CDATA[0]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "9.1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "1.02")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0.39" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="4" hfade="0.5" diameter="10.09"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush016.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush016" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">0.08</param> <param name="HairyBristle/scale">2.84</param> <param name="HairyBristle/shear">0.28</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">false</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="fuzzy"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor id="pressure"> <curve>0,0;0.851406,0.967871;1,1;</curve> </ChildSensor> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="fuzzy"> <curve>0,0;0.248996,0.240964;0.75502,0.538153;1,0.763052;</curve> </ChildSensor> <ChildSensor id="pressure"/> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <curve>0,0;0.502008,0.694779;1,1;</curve> <ChildSensor id="fuzzy"/> <ChildSensor id="pressure"/> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="1" density="0.56" BrushVersion="2" spacing="0.02" angle="2.1293"> <MaskGenerator ratio="0.19" type="circle" vfade="0.5" id="default" spikes="16" hfade="0.5" diameter="61.09"/> </Brush> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "0.08")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "2.84")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="fuzzy"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor id="pressure"> <curve>0,0;0.851406,0.967871;1,1;</curve> </ChildSensor> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="fuzzy"> <curve>0,0;0.248996,0.240964;0.75502,0.538153;1,0.763052;</curve> </ChildSensor> <ChildSensor id="pressure"/> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <curve>0,0;0.502008,0.694779;1,1;</curve> <ChildSensor id="fuzzy"/> <ChildSensor id="pressure"/> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="1" density="0.56" BrushVersion="2" spacing="0.02" angle="2.1293"> <MaskGenerator ratio="0.19" type="circle" vfade="0.5" id="default" spikes="16" hfade="0.5" diameter="61.09"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush013.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush013" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">0.08</param> <param name="HairyBristle/scale">2.84</param> <param name="HairyBristle/shear">0.28</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">false</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.851406,0.967871;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="fuzzy"> <curve>0,0;0.248996,0.240964;0.75502,0.538153;1,0.763052;</curve> </ChildSensor> <ChildSensor id="pressure"/> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <curve>0,0;0.502008,0.694779;1,1;</curve> <ChildSensor id="fuzzy"/> <ChildSensor id="pressure"/> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="1" density="0.56" BrushVersion="2" spacing="0.02" angle="2.1293"> <MaskGenerator ratio="0.19" type="circle" vfade="0.5" id="default" spikes="16" hfade="0.5" diameter="61.09"/> </Brush> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "0.08")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "2.84")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.851406,0.967871;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="fuzzy"> <curve>0,0;0.248996,0.240964;0.75502,0.538153;1,0.763052;</curve> </ChildSensor> <ChildSensor id="pressure"/> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <curve>0,0;0.502008,0.694779;1,1;</curve> <ChildSensor id="fuzzy"/> <ChildSensor id="pressure"/> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="1" density="0.56" BrushVersion="2" spacing="0.02" angle="2.1293"> <MaskGenerator ratio="0.19" type="circle" vfade="0.5" id="default" spikes="16" hfade="0.5" diameter="61.09"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush012f19346.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush012" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">0.08</param> <param name="HairyBristle/scale">2.84</param> <param name="HairyBristle/shear">0.28</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.851406,0.967871;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">false</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.64257,0.883534;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0.39" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="0.59" type="circle" vfade="0.5" id="default" spikes="4" hfade="0.5" diameter="10.09"/> </Brush> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "0.08")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "2.84")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.851406,0.967871;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.64257,0.883534;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0.39" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="0.59" type="circle" vfade="0.5" id="default" spikes="4" hfade="0.5" diameter="10.09"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush008.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush008" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">8.27</param> <param name="HairyBristle/scale">9.08</param> <param name="HairyBristle/shear">1.02</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <curve>0,0;1,0.497992;</curve> <ChildSensor id="pressure"/> <ChildSensor id="speed"/> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="0.8" type="gbr_brush" BrushVersion="2" filename="Sc_Scratches_2.gbr" spacing="0.03" angle="0"/> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="requiredBrushFile"><![CDATA[Sc_Scratches_2.gbr]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "8.27")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "9.08")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "1.02")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <curve>0,0;1,0.497992;</curve> <ChildSensor id="pressure"/> <ChildSensor id="speed"/> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="0.8" type="gbr_brush" BrushVersion="2" filename="Sc_Scratches_2.gbr" spacing="0.03" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "Sc_Scratches_2.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush001.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush001" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">-10</param> <param name="HairyBristle/shear">-1.17</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="0.17" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle3.gbr]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "-10")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "-1.17")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="0.17" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle3.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush009.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush009" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">9.08</param> <param name="HairyBristle/shear">1.02</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="fuzzy"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor periodic="1" length="8822" id="distance"> <curve>0,0;1,1;</curve> </ChildSensor> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="0.4" type="gbr_brush" BrushVersion="2" filename="S_splats_02.gih" spacing="0.2" angle="0"/> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="requiredBrushFile"><![CDATA[S_splats_02.gih]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "9.08")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "1.02")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="fuzzy"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor periodic="1" length="8822" id="distance"> <curve>0,0;1,1;</curve> </ChildSensor> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="0.4" type="gbr_brush" BrushVersion="2" filename="S_splats_02.gih" spacing="0.2" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "S_splats_02.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush015.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush015" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">0.08</param> <param name="HairyBristle/scale">2.84</param> <param name="HairyBristle/shear">0.28</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">false</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="pressure"> <curve>0,0;0.851406,0.967871;1,1;</curve> </ChildSensor> <ChildSensor id="fuzzy"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor id="drawingangle"> <curve>0,0;1,1;</curve> </ChildSensor> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="fuzzy"> <curve>0,0;0.248996,0.240964;0.75502,0.538153;1,0.763052;</curve> </ChildSensor> <ChildSensor id="pressure"/> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <curve>0,0;0.502008,0.694779;1,1;</curve> <ChildSensor id="fuzzy"/> <ChildSensor id="pressure"/> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="1" density="0.56" BrushVersion="2" spacing="0.02" angle="2.1293"> <MaskGenerator ratio="0.19" type="circle" vfade="0.5" id="default" spikes="16" hfade="0.5" diameter="61.09"/> </Brush> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "0.08")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "2.84")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="pressure"> <curve>0,0;0.851406,0.967871;1,1;</curve> </ChildSensor> <ChildSensor id="fuzzy"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor id="drawingangle"> <curve>0,0;1,1;</curve> </ChildSensor> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="fuzzy"> <curve>0,0;0.248996,0.240964;0.75502,0.538153;1,0.763052;</curve> </ChildSensor> <ChildSensor id="pressure"/> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <curve>0,0;0.502008,0.694779;1,1;</curve> <ChildSensor id="fuzzy"/> <ChildSensor id="pressure"/> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="1" density="0.56" BrushVersion="2" spacing="0.02" angle="2.1293"> <MaskGenerator ratio="0.19" type="circle" vfade="0.5" id="default" spikes="16" hfade="0.5" diameter="61.09"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/InkBrush0013.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="InkBrush0013" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">-10</param> <param name="HairyBristle/shear">-1.17</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="0.17" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle3.gbr]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "-10")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "-1.17")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="0.17" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle3.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/.kde4/share/apps/krita/paintoppresets/Inkbrush18.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Inkbrush18" paintopid="hairybrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="Hairy/Version"><![CDATA[1]]></param> <param name="HairyBristle/antialias">false</param> <param name="HairyBristle/density">100</param> <param name="HairyBristle/isConnected">false</param> <param name="HairyBristle/random">3.75</param> <param name="HairyBristle/scale">10</param> <param name="HairyBristle/shear">0</param> <param name="HairyBristle/threshold">true</param> <param name="HairyBristle/useCompositing">false</param> <param name="HairyBristle/useMousePressure">true</param> <param name="HairyInk/bristleInkAmountWeight">50</param> <param name="HairyInk/bristleLengthWeights">50</param> <param name="HairyInk/enabled">false</param> <param name="HairyInk/inkAmount">1024</param> <param name="HairyInk/inkDepletionCurve"><![CDATA[0,0;1,1;]]></param> <param name="HairyInk/inkDepletionWeight">50</param> <param name="HairyInk/pressureWeights">50</param> <param name="HairyInk/soak">false</param> <param name="HairyInk/useOpacity">true</param> <param name="HairyInk/useSaturation">false</param> <param name="HairyInk/useWeights">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureRotation">true</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.441767,0.060241;0.859438,0.574297;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ]]></param> <param name="paintop"><![CDATA[hairybrush]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle3.gbr]]></param> <param name="runtimeCanvasRotation"><![CDATA[0]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hairy/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/antialias"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/density"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/isConnected"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/random"  =  QVariant(QString, "3.75")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/scale"  =  QVariant(QString, "10")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/shear"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/threshold"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useCompositing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyBristle/useMousePressure"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleInkAmountWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/bristleLengthWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkAmount"  =  QVariant(QString, "1024")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionCurve"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/inkDepletionWeight"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/pressureWeights"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/soak"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useSaturation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HairyInk/useWeights"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.441767,0.060241;0.859438,0.574297;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hairybrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle3.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Bristle_mix_over_dull_light.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Bristle_mix_over_dull_light" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0.497992,0;0.674699,0.64257;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">0.3</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">true</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.015625,0.979695;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">true</param> <param name="PressureGradient">false</param> <param name="PressureRotation">true</param> <param name="PressureScatter">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate">true</param> <param name="PressureSpacing">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="declination"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.51</param> <param name="Scattering/Amount"><![CDATA[0.51]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateMode">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">0.6</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.578314,0.177884;1,0.586539;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle1.gbr" spacing="0.05" angle="0"/> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle1.gbr]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0.497992,0;0.674699,0.64257;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.3")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.015625,0.979695;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="declination"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateMode"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.578314,0.177884;1,0.586539;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle1.gbr" spacing="0.05" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle1.gbr")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Block_paint_squary.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Block_paint_squary" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorOption/colorPerParticle"><![CDATA[false]]></param> <param name="ColorOption/fillBackground"><![CDATA[false]]></param> <param name="ColorOption/hue"><![CDATA[0]]></param> <param name="ColorOption/mixBgColor"><![CDATA[false]]></param> <param name="ColorOption/sampleInputColor"><![CDATA[false]]></param> <param name="ColorOption/saturation"><![CDATA[0]]></param> <param name="ColorOption/useRandomHSV"><![CDATA[false]]></param> <param name="ColorOption/useRandomOpacity"><![CDATA[false]]></param> <param name="ColorOption/value"><![CDATA[0]]></param> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve"><![CDATA[true]]></param> <param name="ColorRateValue"><![CDATA[0.7]]></param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="Experiment/displacement"><![CDATA[42]]></param> <param name="Experiment/displacementEnabled"><![CDATA[false]]></param> <param name="Experiment/smoothing"><![CDATA[false]]></param> <param name="Experiment/speed"><![CDATA[42]]></param> <param name="Experiment/speedEnabled"><![CDATA[false]]></param> <param name="FlowValue">1</param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve"><![CDATA[true]]></param> <param name="GradientValue"><![CDATA[1]]></param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MergedPaint"><![CDATA[true]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.614458,0.0883534;0.827309,0.321285;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureColorRate"><![CDATA[true]]></param> <param name="PressureDarken">false</param> <param name="PressureGradient"><![CDATA[false]]></param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate"><![CDATA[true]]></param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="ShapeDynamics/enabled"><![CDATA[true]]></param> <param name="ShapeDynamics/fixedAngle"><![CDATA[30]]></param> <param name="ShapeDynamics/fixedRotation"><![CDATA[false]]></param> <param name="ShapeDynamics/followCursor"><![CDATA[false]]></param> <param name="ShapeDynamics/followCursorWeigth"><![CDATA[1]]></param> <param name="ShapeDynamics/followDrawingAngle"><![CDATA[false]]></param> <param name="ShapeDynamics/followDrawingAngleWeigth"><![CDATA[1]]></param> <param name="ShapeDynamics/randomRotation"><![CDATA[false]]></param> <param name="ShapeDynamics/randomRotationWeight"><![CDATA[0.5]]></param> <param name="ShapeDynamics/randomSize"><![CDATA[true]]></param> <param name="ShapeDynamicsVersion"><![CDATA[2.3]]></param> <param name="Sharpness/threshold">40</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.285141,0.413655;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve"><![CDATA[true]]></param> <param name="SmudgeRateValue"><![CDATA[0.64]]></param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="Spray/aspect"><![CDATA[1]]></param> <param name="Spray/coverage"><![CDATA[0.1]]></param> <param name="Spray/diameter"><![CDATA[100]]></param> <param name="Spray/gaussianDistribution"><![CDATA[false]]></param> <param name="Spray/jitterMoveAmount"><![CDATA[1]]></param> <param name="Spray/jitterMovement"><![CDATA[false]]></param> <param name="Spray/particleCount"><![CDATA[12]]></param> <param name="Spray/rotation"><![CDATA[0]]></param> <param name="Spray/scale"><![CDATA[1]]></param> <param name="Spray/spacing"><![CDATA[0.5]]></param> <param name="Spray/useDensity"><![CDATA[false]]></param> <param name="SprayShape/enabled"><![CDATA[true]]></param> <param name="SprayShape/height"><![CDATA[6]]></param> <param name="SprayShape/imageUrl"><![CDATA[]]></param> <param name="SprayShape/proportional"><![CDATA[false]]></param> <param name="SprayShape/shape"><![CDATA[0]]></param> <param name="SprayShape/useAspect"><![CDATA[true]]></param> <param name="SprayShape/width"><![CDATA[6]]></param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.05" angle="0.296706"> <MaskGenerator ratio="0.54" type="rect" vfade="0.85" id="default" spikes="2" hfade="0.85" diameter="140.97"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle1.gbr]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/colorPerParticle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/fillBackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/hue"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/mixBgColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/sampleInputColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/saturation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomHSV"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/value"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacement"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacementEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/smoothing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speed"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speedEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.614458,0.0883534;0.827309,0.321285;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/enabled"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/fixedAngle"  =  QVariant(QString, "30")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/fixedRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followCursor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followCursorWeigth"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followDrawingAngle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followDrawingAngleWeigth"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomRotationWeight"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamicsVersion"  =  QVariant(QString, "2.3")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "40")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.285141,0.413655;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.64")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/aspect"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/coverage"  =  QVariant(QString, "0.1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/diameter"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/gaussianDistribution"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/jitterMoveAmount"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/jitterMovement"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/particleCount"  =  QVariant(QString, "12")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/rotation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/scale"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/spacing"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/useDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/enabled"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/height"  =  QVariant(QString, "6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/imageUrl"  =  QVariant(QString, "")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/proportional"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/shape"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/useAspect"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/width"  =  QVariant(QString, "6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.05" angle="0.296706"> <MaskGenerator ratio="0.54" type="rect" vfade="0.85" id="default" spikes="2" hfade="0.85" diameter="140.97"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle1.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_smudge_over.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_smudge_over" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">0.7</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">true</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.03125,0.979695;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">false</param> <param name="PressureGradient">false</param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSize">true</param> <param name="PressureSmudgeRate">true</param> <param name="PressureSpacing">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.51</param> <param name="Scattering/Amount"><![CDATA[0.51]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">0.4</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="soft" spikes="2" hfade="0.5" softness_curve="0,1;0.763052,0.759494;1,0;" diameter="80"/> </Brush> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.03125,0.979695;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="soft" spikes="2" hfade="0.5" softness_curve="0,1;0.763052,0.759494;1,0;" diameter="80"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Texture_paint_floor.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Texture_paint_floor" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorOption/colorPerParticle"><![CDATA[false]]></param> <param name="ColorOption/fillBackground"><![CDATA[false]]></param> <param name="ColorOption/hue"><![CDATA[0]]></param> <param name="ColorOption/mixBgColor"><![CDATA[false]]></param> <param name="ColorOption/sampleInputColor"><![CDATA[false]]></param> <param name="ColorOption/saturation"><![CDATA[0]]></param> <param name="ColorOption/useRandomHSV"><![CDATA[false]]></param> <param name="ColorOption/useRandomOpacity"><![CDATA[false]]></param> <param name="ColorOption/value"><![CDATA[0]]></param> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve"><![CDATA[true]]></param> <param name="ColorRateValue"><![CDATA[0.28]]></param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="Experiment/displacement"><![CDATA[42]]></param> <param name="Experiment/displacementEnabled"><![CDATA[false]]></param> <param name="Experiment/smoothing"><![CDATA[false]]></param> <param name="Experiment/speed"><![CDATA[42]]></param> <param name="Experiment/speedEnabled"><![CDATA[false]]></param> <param name="FlowValue">1</param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve"><![CDATA[true]]></param> <param name="GradientValue"><![CDATA[1]]></param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MergedPaint"><![CDATA[false]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.214634;0.526104,0.512195;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureColorRate"><![CDATA[true]]></param> <param name="PressureDarken">false</param> <param name="PressureGradient"><![CDATA[false]]></param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate"><![CDATA[true]]></param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">40</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve"><![CDATA[true]]></param> <param name="SmudgeRateValue"><![CDATA[0.56]]></param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_forest.gih" spacing="0.5" angle="0"/> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_forest.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/colorPerParticle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/fillBackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/hue"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/mixBgColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/sampleInputColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/saturation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomHSV"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/value"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacement"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacementEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/smoothing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speed"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speedEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.214634;0.526104,0.512195;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "40")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.56")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_forest.gih" spacing="0.5" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_forest.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_ink_10.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_ink_10" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">1</param> <param name="HorizontalMirrorEnabled">false</param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureDarken">false</param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">true</param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/Amount"><![CDATA[1]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/factor"><![CDATA[1]]></param> <param name="Sharpness/threshold">4</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.393574,0.160643;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.393574,0.160643;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="gauss" spikes="2" hfade="0.5" diameter="10"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_starfield2.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/factor"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.393574,0.160643;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.393574,0.160643;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="gauss" spikes="2" hfade="0.5" diameter="10"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_starfield2.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_mix_soft.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_mix_soft" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.24;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">1</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.506173,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">true</param> <param name="PressureGradient">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate">true</param> <param name="PressureSpacing">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.51</param> <param name="Scattering/Amount"><![CDATA[0.51]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.497143;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="76.45"/> </Brush> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> <param name="requiredBrushFile"><![CDATA[A_eroded-cercle-anim.gih]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.24;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.506173,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.497143;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="76.45"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_eroded-cercle-anim.gih")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_smudge_hard.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_smudge_hard" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.245714;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">0</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">false</param> <param name="PressureGradient">false</param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate">true</param> <param name="PressureSpacing">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.51</param> <param name="Scattering/Amount"><![CDATA[0.51]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.497143;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.05" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="200.65"/> </Brush> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> <param name="requiredBrushFile"><![CDATA[A_eroded-cercle-anim.gih]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.245714;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.497143;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.05" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="200.65"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_eroded-cercle-anim.gih")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_mix_dull.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_mix_dull" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.502008,0;0.662651,0.257028;0.75502,0.493976;0.819277,0.751004;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">1</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.257028,0.257028;0.75502,1;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">true</param> <param name="PressureGradient">false</param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate">true</param> <param name="PressureSpacing">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.51</param> <param name="Scattering/Amount"><![CDATA[0.51]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateMode">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0.00401606,1;0.248896,0.895582;0.502008,0.610442;0.75502,0.35743;1,0.24498;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.02" id="soft" spikes="2" hfade="0.02" softness_curve="0,0.5;1,0;" diameter="50"/> </Brush> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.502008,0;0.662651,0.257028;0.75502,0.493976;0.819277,0.751004;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.257028,0.257028;0.75502,1;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateMode"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0.00401606,1;0.248896,0.895582;0.502008,0.610442;0.75502,0.35743;1,0.24498;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.02" id="soft" spikes="2" hfade="0.02" softness_curve="0,0.5;1,0;" diameter="50"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Splat_paint_texture_2.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Splat_paint_texture_2" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorOption/colorPerParticle"><![CDATA[false]]></param> <param name="ColorOption/fillBackground"><![CDATA[false]]></param> <param name="ColorOption/hue"><![CDATA[0]]></param> <param name="ColorOption/mixBgColor"><![CDATA[false]]></param> <param name="ColorOption/sampleInputColor"><![CDATA[false]]></param> <param name="ColorOption/saturation"><![CDATA[0]]></param> <param name="ColorOption/useRandomHSV"><![CDATA[false]]></param> <param name="ColorOption/useRandomOpacity"><![CDATA[false]]></param> <param name="ColorOption/value"><![CDATA[0]]></param> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.449735;0.0923695,0.73545;0.277108,0.94709;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve"><![CDATA[true]]></param> <param name="ColorRateValue"><![CDATA[0.68]]></param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="Experiment/displacement"><![CDATA[42]]></param> <param name="Experiment/displacementEnabled"><![CDATA[false]]></param> <param name="Experiment/smoothing"><![CDATA[false]]></param> <param name="Experiment/speed"><![CDATA[42]]></param> <param name="Experiment/speedEnabled"><![CDATA[false]]></param> <param name="FlowValue">1</param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve"><![CDATA[true]]></param> <param name="GradientValue"><![CDATA[1]]></param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MergedPaint"><![CDATA[false]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.214634;0.526104,0.512195;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureColorRate"><![CDATA[true]]></param> <param name="PressureDarken">false</param> <param name="PressureGradient"><![CDATA[false]]></param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate"><![CDATA[true]]></param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">true</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="ShapeDynamics/enabled"><![CDATA[true]]></param> <param name="ShapeDynamics/fixedAngle"><![CDATA[30]]></param> <param name="ShapeDynamics/fixedRotation"><![CDATA[false]]></param> <param name="ShapeDynamics/followCursor"><![CDATA[false]]></param> <param name="ShapeDynamics/followCursorWeigth"><![CDATA[1]]></param> <param name="ShapeDynamics/followDrawingAngle"><![CDATA[false]]></param> <param name="ShapeDynamics/followDrawingAngleWeigth"><![CDATA[1]]></param> <param name="ShapeDynamics/randomRotation"><![CDATA[false]]></param> <param name="ShapeDynamics/randomRotationWeight"><![CDATA[0.5]]></param> <param name="ShapeDynamics/randomSize"><![CDATA[true]]></param> <param name="ShapeDynamicsVersion"><![CDATA[2.3]]></param> <param name="Sharpness/threshold">40</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.586345,0.248996;0.763052,0.429719;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.857143;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve"><![CDATA[true]]></param> <param name="SmudgeRateValue"><![CDATA[0.28]]></param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.100402;0.341365,0.2249;0.646586,0.514056;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">0.45</param> <param name="Spray/aspect"><![CDATA[1]]></param> <param name="Spray/coverage"><![CDATA[0.1]]></param> <param name="Spray/diameter"><![CDATA[100]]></param> <param name="Spray/gaussianDistribution"><![CDATA[false]]></param> <param name="Spray/jitterMoveAmount"><![CDATA[1]]></param> <param name="Spray/jitterMovement"><![CDATA[false]]></param> <param name="Spray/particleCount"><![CDATA[12]]></param> <param name="Spray/rotation"><![CDATA[0]]></param> <param name="Spray/scale"><![CDATA[1]]></param> <param name="Spray/spacing"><![CDATA[0.5]]></param> <param name="Spray/useDensity"><![CDATA[false]]></param> <param name="SprayShape/enabled"><![CDATA[true]]></param> <param name="SprayShape/height"><![CDATA[6]]></param> <param name="SprayShape/imageUrl"><![CDATA[]]></param> <param name="SprayShape/proportional"><![CDATA[false]]></param> <param name="SprayShape/shape"><![CDATA[0]]></param> <param name="SprayShape/useAspect"><![CDATA[true]]></param> <param name="SprayShape/width"><![CDATA[6]]></param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="S_splats_02.gih" spacing="0.2" angle="0"/> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[S_splats_02.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/colorPerParticle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/fillBackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/hue"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/mixBgColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/sampleInputColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/saturation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomHSV"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/value"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.449735;0.0923695,0.73545;0.277108,0.94709;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.68")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacement"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacementEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/smoothing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speed"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speedEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.214634;0.526104,0.512195;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/enabled"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/fixedAngle"  =  QVariant(QString, "30")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/fixedRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followCursor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followCursorWeigth"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followDrawingAngle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followDrawingAngleWeigth"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomRotationWeight"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamicsVersion"  =  QVariant(QString, "2.3")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "40")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.586345,0.248996;0.763052,0.429719;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.857143;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.100402;0.341365,0.2249;0.646586,0.514056;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "0.45")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/aspect"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/coverage"  =  QVariant(QString, "0.1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/diameter"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/gaussianDistribution"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/jitterMoveAmount"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/jitterMovement"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/particleCount"  =  QVariant(QString, "12")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/rotation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/scale"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/spacing"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/useDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/enabled"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/height"  =  QVariant(QString, "6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/imageUrl"  =  QVariant(QString, "")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/proportional"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/shape"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/useAspect"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/width"  =  QVariant(QString, "6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="S_splats_02.gih" spacing="0.2" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "S_splats_02.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Rake_paint_dry_bristle.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Rake_paint_dry_bristle" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorOption/colorPerParticle"><![CDATA[false]]></param> <param name="ColorOption/fillBackground"><![CDATA[false]]></param> <param name="ColorOption/hue"><![CDATA[0]]></param> <param name="ColorOption/mixBgColor"><![CDATA[false]]></param> <param name="ColorOption/sampleInputColor"><![CDATA[false]]></param> <param name="ColorOption/saturation"><![CDATA[0]]></param> <param name="ColorOption/useRandomHSV"><![CDATA[false]]></param> <param name="ColorOption/useRandomOpacity"><![CDATA[false]]></param> <param name="ColorOption/value"><![CDATA[0]]></param> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve"><![CDATA[true]]></param> <param name="ColorRateValue"><![CDATA[0.28]]></param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="Experiment/displacement"><![CDATA[42]]></param> <param name="Experiment/displacementEnabled"><![CDATA[false]]></param> <param name="Experiment/smoothing"><![CDATA[false]]></param> <param name="Experiment/speed"><![CDATA[42]]></param> <param name="Experiment/speedEnabled"><![CDATA[false]]></param> <param name="FlowValue">0.7</param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve"><![CDATA[true]]></param> <param name="GradientValue"><![CDATA[1]]></param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MergedPaint"><![CDATA[false]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.771084,0.528259;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">0.12</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureColorRate"><![CDATA[true]]></param> <param name="PressureDarken">false</param> <param name="PressureGradient"><![CDATA[false]]></param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate"><![CDATA[true]]></param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">40</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve"><![CDATA[true]]></param> <param name="SmudgeRateValue"><![CDATA[0.56]]></param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush scale="0.6" type="gbr_brush" BrushVersion="2" filename="A_sparkle1.gbr" spacing="0.05" angle="0"/> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle1.gbr]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/colorPerParticle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/fillBackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/hue"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/mixBgColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/sampleInputColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/saturation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomHSV"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/value"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacement"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacementEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/smoothing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speed"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speedEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "0.7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.771084,0.528259;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "0.12")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "40")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.56")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="0.6" type="gbr_brush" BrushVersion="2" filename="A_sparkle1.gbr" spacing="0.05" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle1.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_mix.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_mix" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.502008,0;0.662651,0.257028;0.75502,0.493976;0.819277,0.751004;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">1</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.248996,0.35743;0.75502,1;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">true</param> <param name="PressureGradient">false</param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate">true</param> <param name="PressureSpacing">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.51</param> <param name="Scattering/Amount"><![CDATA[0.51]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0.00401606,1;0.248896,0.895582;0.502008,0.610442;0.75502,0.35743;1,0.24498;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.8" id="default" spikes="2" hfade="0.8" diameter="50"/> </Brush> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.502008,0;0.662651,0.257028;0.75502,0.493976;0.819277,0.751004;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.248996,0.35743;0.75502,1;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0.00401606,1;0.248896,0.895582;0.502008,0.610442;0.75502,0.35743;1,0.24498;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.02" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.8" id="default" spikes="2" hfade="0.8" diameter="50"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/pixel1.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="pixel1" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">1</param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.6875,0.488889;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureDarken">false</param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">false</param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">4</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="Texture/Pattern/CutoffLeft">0</param> <param name="Texture/Pattern/CutoffPolicy">0</param> <param name="Texture/Pattern/CutoffRight">255</param> <param name="Texture/Pattern/Enabled">false</param> <param name="Texture/Pattern/Invert">false</param> <param name="Texture/Pattern/Name"><![CDATA[Canvas 01]]></param> <param name="Texture/Pattern/OffsetX">0</param> <param name="Texture/Pattern/OffsetY">0</param> <param name="Texture/Pattern/Pattern"></param> <param name="Texture/Pattern/PatternFileName"><![CDATA[/home/timo/kde4/inst/share/apps/krita/patterns/Canvas_01.pat]]></param> <param name="Texture/Pattern/Scale">1</param> <param name="Texture/Pattern/Strength">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="1" id="gauss" spikes="2" hfade="1" diameter="1"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_starfield2.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>
"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.6875,0.488889;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffLeft"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffPolicy"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffRight"  =  QVariant(QString, "255")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Invert"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Name"  =  QVariant(QString, "Canvas 01")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetX"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetY"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Pattern"  =  QVariant(QString, "
")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/PatternFileName"  =  QVariant(QString, "/home/timo/kde4/inst/share/apps/krita/patterns/Canvas_01.pat")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Scale"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Strength"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="1" id="gauss" spikes="2" hfade="1" diameter="1"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_starfield2.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_smudge_detail.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_smudge_detail" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.491429;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">1</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,0.979695;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">false</param> <param name="PressureGradient">false</param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSize">true</param> <param name="PressureSmudgeRate">true</param> <param name="PressureSpacing">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.51</param> <param name="Scattering/Amount"><![CDATA[0.51]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.497143;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="50.45"/> </Brush> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> <param name="requiredBrushFile"><![CDATA[A_eroded-cercle-anim.gih]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.491429;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,0.979695;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.497143;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="50.45"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_eroded-cercle-anim.gih")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Block_paint.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Block_paint" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">1</param> <param name="HorizontalMirrorEnabled">false</param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureDarken">false</param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">true</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">false</param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <curve>0,0;0.305221,0.11976;0.566265,0.520958;1,1;</curve> <ChildSensor id="speed"/> <ChildSensor id="pressure"/> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">4.9</param> <param name="Scattering/Amount"><![CDATA[4.9]]></param> <param name="Scattering/AxisX">false</param> <param name="Scattering/AxisY">false</param> <param name="Sharpness/factor"><![CDATA[1]]></param> <param name="Sharpness/threshold">40</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.05" angle="1.58825"> <MaskGenerator ratio="0.31" type="rect" vfade="0.86" id="default" spikes="2" hfade="0.86" diameter="86"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_starfield2.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <curve>0,0;0.305221,0.11976;0.566265,0.520958;1,1;</curve> <ChildSensor id="speed"/> <ChildSensor id="pressure"/> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "4.9")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "4.9")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/factor"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "40")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.05" angle="1.58825"> <MaskGenerator ratio="0.31" type="rect" vfade="0.86" id="default" spikes="2" hfade="0.86" diameter="86"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_starfield2.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_erase_soft.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_erase_soft" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[erase]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">1</param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[true]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.719474,0.46187;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureDarken">false</param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">true</param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">2</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.2" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0" id="soft" spikes="2" hfade="0" softness_curve="0,0.495496;0.253012,0.198198;0.554217,0.0341859;1,0;" diameter="100"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_eroded-cercle-anim.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "erase")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.719474,0.46187;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.2" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0" id="soft" spikes="2" hfade="0" softness_curve="0,0.495496;0.253012,0.198198;0.554217,0.0341859;1,0;" diameter="100"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_eroded-cercle-anim.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Pencil_shade_texture.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Pencil_shade_texture" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">1</param> <param name="HorizontalMirrorEnabled">false</param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0.0128398,0;1,0.497462;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureDarken">false</param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">true</param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/Amount"><![CDATA[1]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/factor"><![CDATA[1]]></param> <param name="Sharpness/threshold">4</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.35533;0.511943,0.486917;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.696682,0.370166;1,0.994475;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush scale="2" type="gbr_brush" BrushVersion="2" filename="P_Graphite_Pencil_grain.gih" spacing="0.2" angle="0"/> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[P_Graphite_Pencil_grain.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0.0128398,0;1,0.497462;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/factor"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.35533;0.511943,0.486917;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.696682,0.370166;1,0.994475;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="2" type="gbr_brush" BrushVersion="2" filename="P_Graphite_Pencil_grain.gih" spacing="0.2" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "P_Graphite_Pencil_grain.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Hatch_noisy.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Hatch_noisy" paintopid="hatchingbrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CrosshatchingSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="CrosshatchingUseCurve">true</param> <param name="CrosshatchingValue">1</param> <param name="Hatching/Version"><![CDATA[2]]></param> <param name="Hatching/angle">45</param> <param name="Hatching/bool_antialias">true</param> <param name="Hatching/bool_minusthenplus">false</param> <param name="Hatching/bool_moirepattern">true</param> <param name="Hatching/bool_nocrosshatching">false</param> <param name="Hatching/bool_opaquebackground">false</param> <param name="Hatching/bool_perpendicular">false</param> <param name="Hatching/bool_plusthenminus">false</param> <param name="Hatching/bool_subpixelprecision">true</param> <param name="Hatching/origin_x">0</param> <param name="Hatching/origin_y">0</param> <param name="Hatching/separation">4.9</param> <param name="Hatching/separationintervals">2</param> <param name="Hatching/thickness">4.9</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.627049,0.433735;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureCrosshatching">true</param> <param name="PressureSeparation">false</param> <param name="PressureSize">false</param> <param name="PressureThickness">false</param> <param name="SeparationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SeparationUseCurve">true</param> <param name="SeparationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.445783,0.124498;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="ThicknessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.618474,0.46988;1,1;</curve> </params> ]]></param> <param name="ThicknessUseCurve">true</param> <param name="ThicknessValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="1" density="0.44" BrushVersion="2" spacing="0.45" angle="0.349066"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="83.05"/> </Brush> ]]></param> <param name="paintop"><![CDATA[hatchingbrush]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CrosshatchingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CrosshatchingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CrosshatchingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/Version"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/angle"  =  QVariant(QString, "45")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_antialias"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_minusthenplus"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_moirepattern"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_nocrosshatching"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_opaquebackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_perpendicular"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_plusthenminus"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_subpixelprecision"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/origin_x"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/origin_y"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/separation"  =  QVariant(QString, "4.9")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/separationintervals"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/thickness"  =  QVariant(QString, "4.9")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.627049,0.433735;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureCrosshatching"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSeparation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureThickness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SeparationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SeparationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SeparationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.445783,0.124498;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ThicknessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.618474,0.46988;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ThicknessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ThicknessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="1" density="0.44" BrushVersion="2" spacing="0.45" angle="0.349066"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="83.05"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hatchingbrush")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_smudge_soft.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_smudge_soft" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.24;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">1</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">false</param> <param name="PressureGradient">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate">true</param> <param name="PressureSpacing">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.51</param> <param name="Scattering/Amount"><![CDATA[0.51]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.497143;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="62.45"/> </Brush> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> <param name="requiredBrushFile"><![CDATA[A_abstract-textured1.gih]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.24;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.497143;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="62.45"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_abstract-textured1.gih")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Splat_paint_texture.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Splat_paint_texture" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorOption/colorPerParticle"><![CDATA[false]]></param> <param name="ColorOption/fillBackground"><![CDATA[false]]></param> <param name="ColorOption/hue"><![CDATA[0]]></param> <param name="ColorOption/mixBgColor"><![CDATA[false]]></param> <param name="ColorOption/sampleInputColor"><![CDATA[false]]></param> <param name="ColorOption/saturation"><![CDATA[0]]></param> <param name="ColorOption/useRandomHSV"><![CDATA[false]]></param> <param name="ColorOption/useRandomOpacity"><![CDATA[false]]></param> <param name="ColorOption/value"><![CDATA[0]]></param> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.449735;0.0923695,0.73545;0.277108,0.94709;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve"><![CDATA[true]]></param> <param name="ColorRateValue"><![CDATA[0.68]]></param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="Experiment/displacement"><![CDATA[42]]></param> <param name="Experiment/displacementEnabled"><![CDATA[false]]></param> <param name="Experiment/smoothing"><![CDATA[false]]></param> <param name="Experiment/speed"><![CDATA[42]]></param> <param name="Experiment/speedEnabled"><![CDATA[false]]></param> <param name="FlowValue">1</param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve"><![CDATA[true]]></param> <param name="GradientValue"><![CDATA[1]]></param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MergedPaint"><![CDATA[false]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.214634;0.526104,0.512195;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureColorRate"><![CDATA[true]]></param> <param name="PressureDarken">false</param> <param name="PressureGradient"><![CDATA[false]]></param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">true</param> <param name="PressureSmudgeRate"><![CDATA[true]]></param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">true</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="ShapeDynamics/enabled"><![CDATA[true]]></param> <param name="ShapeDynamics/fixedAngle"><![CDATA[30]]></param> <param name="ShapeDynamics/fixedRotation"><![CDATA[false]]></param> <param name="ShapeDynamics/followCursor"><![CDATA[false]]></param> <param name="ShapeDynamics/followCursorWeigth"><![CDATA[1]]></param> <param name="ShapeDynamics/followDrawingAngle"><![CDATA[false]]></param> <param name="ShapeDynamics/followDrawingAngleWeigth"><![CDATA[1]]></param> <param name="ShapeDynamics/randomRotation"><![CDATA[false]]></param> <param name="ShapeDynamics/randomRotationWeight"><![CDATA[0.5]]></param> <param name="ShapeDynamics/randomSize"><![CDATA[true]]></param> <param name="ShapeDynamicsVersion"><![CDATA[2.3]]></param> <param name="Sharpness/threshold">40</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.586345,0.248996;0.763052,0.429719;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.857143;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve"><![CDATA[true]]></param> <param name="SmudgeRateValue"><![CDATA[0.28]]></param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.100402;0.341365,0.2249;0.646586,0.514056;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">0.45</param> <param name="Spray/aspect"><![CDATA[1]]></param> <param name="Spray/coverage"><![CDATA[0.1]]></param> <param name="Spray/diameter"><![CDATA[100]]></param> <param name="Spray/gaussianDistribution"><![CDATA[false]]></param> <param name="Spray/jitterMoveAmount"><![CDATA[1]]></param> <param name="Spray/jitterMovement"><![CDATA[false]]></param> <param name="Spray/particleCount"><![CDATA[12]]></param> <param name="Spray/rotation"><![CDATA[0]]></param> <param name="Spray/scale"><![CDATA[1]]></param> <param name="Spray/spacing"><![CDATA[0.5]]></param> <param name="Spray/useDensity"><![CDATA[false]]></param> <param name="SprayShape/enabled"><![CDATA[true]]></param> <param name="SprayShape/height"><![CDATA[6]]></param> <param name="SprayShape/imageUrl"><![CDATA[]]></param> <param name="SprayShape/proportional"><![CDATA[false]]></param> <param name="SprayShape/shape"><![CDATA[0]]></param> <param name="SprayShape/useAspect"><![CDATA[true]]></param> <param name="SprayShape/width"><![CDATA[6]]></param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_splat2.gih" spacing="0.99" angle="0"/> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_splat2.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/colorPerParticle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/fillBackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/hue"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/mixBgColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/sampleInputColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/saturation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomHSV"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/value"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.449735;0.0923695,0.73545;0.277108,0.94709;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.68")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacement"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacementEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/smoothing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speed"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speedEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.214634;0.526104,0.512195;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/enabled"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/fixedAngle"  =  QVariant(QString, "30")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/fixedRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followCursor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followCursorWeigth"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followDrawingAngle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followDrawingAngleWeigth"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomRotationWeight"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamicsVersion"  =  QVariant(QString, "2.3")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "40")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.586345,0.248996;0.763052,0.429719;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.857143;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.100402;0.341365,0.2249;0.646586,0.514056;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "0.45")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/aspect"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/coverage"  =  QVariant(QString, "0.1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/diameter"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/gaussianDistribution"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/jitterMoveAmount"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/jitterMovement"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/particleCount"  =  QVariant(QString, "12")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/rotation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/scale"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/spacing"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/useDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/enabled"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/height"  =  QVariant(QString, "6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/imageUrl"  =  QVariant(QString, "")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/proportional"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/shape"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/useAspect"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/width"  =  QVariant(QString, "6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_splat2.gih" spacing="0.99" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_splat2.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_smudge_oil.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_smudge_oil" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">0.5</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">false</param> <param name="PressureGradient">false</param> <param name="PressureOpacity"><![CDATA[false]]></param> <param name="PressureRotation">true</param> <param name="PressureScatter">true</param> <param name="PressureSize">true</param> <param name="PressureSmudgeRate">true</param> <param name="PressureSpacing">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="ascension"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.13</param> <param name="Scattering/Amount"><![CDATA[0.13]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.598394,0.427884;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.333333,0.572917;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">0.65</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0.74" density="0.75" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="0.35" type="circle" vfade="0.5" id="soft" spikes="2" hfade="0.5" softness_curve="0,1;0.694779,0.64557;1,0;" diameter="149"/> </Brush> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="ascension"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.13")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.13")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.598394,0.427884;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.333333,0.572917;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.65")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0.74" density="0.75" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="0.35" type="circle" vfade="0.5" id="soft" spikes="2" hfade="0.5" softness_curve="0,1;0.694779,0.64557;1,0;" diameter="149"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_erase.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_erase" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[erase]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">1</param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureDarken">false</param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[false]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">true</param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">4</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.413655,0.333333;0.674699,0.772125;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.87" id="default" spikes="2" hfade="0.87" diameter="50"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "erase")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.413655,0.333333;0.674699,0.772125;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.87" id="default" spikes="2" hfade="0.87" diameter="50"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Texture_paint_chalk.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Texture_paint_chalk" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve"><![CDATA[true]]></param> <param name="ColorRateValue"><![CDATA[0.28]]></param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">1</param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve"><![CDATA[true]]></param> <param name="GradientValue"><![CDATA[1]]></param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MergedPaint"><![CDATA[false]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.214634;0.526104,0.512195;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureColorRate"><![CDATA[true]]></param> <param name="PressureDarken">false</param> <param name="PressureGradient"><![CDATA[false]]></param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate"><![CDATA[true]]></param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">40</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve"><![CDATA[true]]></param> <param name="SmudgeRateValue"><![CDATA[0.56]]></param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush scale="1.5" type="gbr_brush" BrushVersion="2" filename="A_eroded-knife-anim.gih" spacing="0.1" angle="0"/> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_eroded-knife-anim.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.214634;0.526104,0.512195;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "40")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.56")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1.5" type="gbr_brush" BrushVersion="2" filename="A_eroded-knife-anim.gih" spacing="0.1" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_eroded-knife-anim.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Rake_smudge.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Rake_smudge" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.26506,0.200803;0.658635,0.859438;0.73494,0.955823;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">0.7</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">false</param> <param name="PressureGradient">false</param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate">false</param> <param name="PressureSpacing">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,1;0.144578,0.425703;0.341365,0.236948;1,0;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.29</param> <param name="Scattering/Amount"><![CDATA[0.51]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.261044,0.39759;0.594378,0.759036;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">false</param> <param name="SizeValue">1</param> <param name="SmudgeRateMode">0</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">0.98</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,1;1,0;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="R_Rake4.gih" spacing="0.03" angle="0"/> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> <param name="requiredBrushFile"><![CDATA[R_Rake4.gih]]></param> <param name="runtimeCanvasRotation">0</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.26506,0.200803;0.658635,0.859438;0.73494,0.955823;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,1;0.144578,0.425703;0.341365,0.236948;1,0;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.29")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.261044,0.39759;0.594378,0.759036;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateMode"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.98")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,1;1,0;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="R_Rake4.gih" spacing="0.03" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "R_Rake4.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/FX-explode.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="FX-explode" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="ColorRateUseCurve"><![CDATA[true]]></param> <param name="ColorRateValue"><![CDATA[1]]></param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[add]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">1</param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="GradientUseCurve"><![CDATA[true]]></param> <param name="GradientValue"><![CDATA[1]]></param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[dodge]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MergedPaint"><![CDATA[false]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.699394,0.526127;0.995984,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureColorRate"><![CDATA[false]]></param> <param name="PressureDarken">false</param> <param name="PressureGradient"><![CDATA[false]]></param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">true</param> <param name="PressureSmudgeRate"><![CDATA[true]]></param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">2</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SmudgeRateUseCurve"><![CDATA[true]]></param> <param name="SmudgeRateValue"><![CDATA[1]]></param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush scale="2" type="gbr_brush" BrushVersion="2" filename="A_smoke.gih" spacing="0.36" angle="0"/> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_smoke.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "add")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "dodge")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.699394,0.526127;0.995984,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="2" type="gbr_brush" BrushVersion="2" filename="A_smoke.gih" spacing="0.36" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_smoke.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Sketch_ink_small.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Sketch_ink_small" paintopid="sketchbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveOpacity"><![CDATA[0,0;0.5,1;]]></param> <param name="CurveRotation"><![CDATA[0,0;1,1;]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomOpacity"><![CDATA[true]]></param> <param name="CustomRotation"><![CDATA[true]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="DensitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DensityUseCurve">true</param> <param name="DensityValue">1</param> <param name="Line widthSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.626506,0.24498;0.763052,0.381526;1,1;</curve> </params> ]]></param> <param name="Line widthUseCurve">true</param> <param name="Line widthValue">1</param> <param name="Offset scaleSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="Offset scaleUseCurve">true</param> <param name="Offset scaleValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureDensity">false</param> <param name="PressureLine width">true</param> <param name="PressureOffset scale">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="Sketch/distanceDensity">false</param> <param name="Sketch/distanceOpacity">false</param> <param name="Sketch/lineWidth">1</param> <param name="Sketch/magnetify">true</param> <param name="Sketch/makeConnection">true</param> <param name="Sketch/offset">30</param> <param name="Sketch/probability">0.5</param> <param name="Sketch/randomOpacity">false</param> <param name="Sketch/randomRGB">false</param> <param name="Sketch/simpleMode">true</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="128"/> </Brush> ]]></param> <param name="paintop"><![CDATA[sketchbrush]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveOpacity"  =  QVariant(QString, "0,0;0.5,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveRotation"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.626506,0.24498;0.763052,0.381526;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureLine width"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOffset scale"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/lineWidth"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/magnetify"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/makeConnection"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/offset"  =  QVariant(QString, "30")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/probability"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomRGB"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/simpleMode"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="128"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "sketchbrush")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Sketch_speedpaint_shade.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Sketch_speedpaint_shade" paintopid="sketchbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve"><![CDATA[true]]></param> <param name="DarkenValue"><![CDATA[1]]></param> <param name="DensitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="DensityUseCurve">true</param> <param name="DensityValue">1</param> <param name="HorizontalMirrorEnabled"><![CDATA[false]]></param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="Line widthSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="Line widthUseCurve">true</param> <param name="Line widthValue">1</param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve"><![CDATA[true]]></param> <param name="MirrorValue"><![CDATA[1]]></param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve"><![CDATA[true]]></param> <param name="MixValue"><![CDATA[1]]></param> <param name="Offset scaleSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="Offset scaleUseCurve">true</param> <param name="Offset scaleValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.0200803;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureDarken"><![CDATA[false]]></param> <param name="PressureDensity">false</param> <param name="PressureLine width">false</param> <param name="PressureMirror"><![CDATA[false]]></param> <param name="PressureMix"><![CDATA[false]]></param> <param name="PressureOffset scale">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter"><![CDATA[false]]></param> <param name="PressureSharpness"><![CDATA[false]]></param> <param name="PressureSize">false</param> <param name="PressureSoftness"><![CDATA[false]]></param> <param name="PressureSpacing"><![CDATA[false]]></param> <param name="Pressureh"><![CDATA[false]]></param> <param name="Pressures"><![CDATA[false]]></param> <param name="Pressurev"><![CDATA[false]]></param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve"><![CDATA[true]]></param> <param name="ScatterValue"><![CDATA[1]]></param> <param name="Scattering/AxisX"><![CDATA[true]]></param> <param name="Scattering/AxisY"><![CDATA[true]]></param> <param name="Sharpness/threshold"><![CDATA[4]]></param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve"><![CDATA[true]]></param> <param name="SharpnessValue"><![CDATA[1]]></param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="Sketch/distanceDensity">false</param> <param name="Sketch/distanceOpacity">false</param> <param name="Sketch/lineWidth">10</param> <param name="Sketch/magnetify">true</param> <param name="Sketch/makeConnection">true</param> <param name="Sketch/offset">30</param> <param name="Sketch/probability">0.5</param> <param name="Sketch/randomOpacity">false</param> <param name="Sketch/randomRGB">false</param> <param name="Sketch/simpleMode">true</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve"><![CDATA[true]]></param> <param name="SoftnessValue"><![CDATA[1]]></param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve"><![CDATA[true]]></param> <param name="SpacingValue"><![CDATA[1]]></param> <param name="VerticalMirrorEnabled"><![CDATA[false]]></param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="128"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve"><![CDATA[true]]></param> <param name="hValue"><![CDATA[1]]></param> <param name="paintop"><![CDATA[sketchbrush]]></param> <param name="requiredBrushFile"><![CDATA[Z_Pixel_4x4_rounded.gbr]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve"><![CDATA[true]]></param> <param name="sValue"><![CDATA[1]]></param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve"><![CDATA[true]]></param> <param name="vValue"><![CDATA[1]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.0200803;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureLine width"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOffset scale"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/lineWidth"  =  QVariant(QString, "10")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/magnetify"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/makeConnection"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/offset"  =  QVariant(QString, "30")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/probability"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomRGB"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/simpleMode"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="128"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "sketchbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "Z_Pixel_4x4_rounded.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Sketch_wires.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Sketch_wires" paintopid="sketchbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="DarkenUseCurve"><![CDATA[true]]></param> <param name="DarkenValue"><![CDATA[1]]></param> <param name="DensitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="DensityUseCurve">true</param> <param name="DensityValue">1</param> <param name="HorizontalMirrorEnabled"><![CDATA[false]]></param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="Line widthSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="Line widthUseCurve">true</param> <param name="Line widthValue">1</param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="MirrorUseCurve"><![CDATA[true]]></param> <param name="MirrorValue"><![CDATA[1]]></param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="MixUseCurve"><![CDATA[true]]></param> <param name="MixValue"><![CDATA[1]]></param> <param name="Offset scaleSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="Offset scaleUseCurve">true</param> <param name="Offset scaleValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,0.128514;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureDarken"><![CDATA[false]]></param> <param name="PressureDensity">false</param> <param name="PressureLine width">false</param> <param name="PressureMirror"><![CDATA[false]]></param> <param name="PressureMix"><![CDATA[false]]></param> <param name="PressureOffset scale">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter"><![CDATA[false]]></param> <param name="PressureSharpness"><![CDATA[false]]></param> <param name="PressureSize">true</param> <param name="PressureSoftness"><![CDATA[false]]></param> <param name="PressureSpacing"><![CDATA[false]]></param> <param name="Pressureh"><![CDATA[false]]></param> <param name="Pressures"><![CDATA[false]]></param> <param name="Pressurev"><![CDATA[false]]></param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="ScatterUseCurve"><![CDATA[true]]></param> <param name="ScatterValue"><![CDATA[1]]></param> <param name="Scattering/AxisX"><![CDATA[true]]></param> <param name="Scattering/AxisY"><![CDATA[true]]></param> <param name="Sharpness/threshold"><![CDATA[40]]></param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SharpnessUseCurve"><![CDATA[true]]></param> <param name="SharpnessValue"><![CDATA[1]]></param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="Sketch/distanceDensity">false</param> <param name="Sketch/distanceOpacity">false</param> <param name="Sketch/lineWidth">2</param> <param name="Sketch/magnetify">true</param> <param name="Sketch/makeConnection">true</param> <param name="Sketch/offset">100</param> <param name="Sketch/probability">1</param> <param name="Sketch/randomOpacity">false</param> <param name="Sketch/randomRGB">false</param> <param name="Sketch/simpleMode">true</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SoftnessUseCurve"><![CDATA[true]]></param> <param name="SoftnessValue"><![CDATA[1]]></param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve"><![CDATA[true]]></param> <param name="SpacingValue"><![CDATA[1]]></param> <param name="VerticalMirrorEnabled"><![CDATA[false]]></param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="106.04"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="hUseCurve"><![CDATA[true]]></param> <param name="hValue"><![CDATA[1]]></param> <param name="paintop"><![CDATA[sketchbrush]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="sUseCurve"><![CDATA[true]]></param> <param name="sValue"><![CDATA[1]]></param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="vUseCurve"><![CDATA[true]]></param> <param name="vValue"><![CDATA[1]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,0.128514;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureLine width"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOffset scale"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "40")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/lineWidth"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/magnetify"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/makeConnection"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/offset"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/probability"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomRGB"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/simpleMode"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="106.04"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "sketchbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Sketch_speedpaint.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Sketch_speedpaint" paintopid="sketchbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve"><![CDATA[true]]></param> <param name="DarkenValue"><![CDATA[1]]></param> <param name="DensitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="DensityUseCurve">true</param> <param name="DensityValue">1</param> <param name="HorizontalMirrorEnabled"><![CDATA[false]]></param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="Line widthSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="Line widthUseCurve">true</param> <param name="Line widthValue">1</param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve"><![CDATA[true]]></param> <param name="MirrorValue"><![CDATA[1]]></param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve"><![CDATA[true]]></param> <param name="MixValue"><![CDATA[1]]></param> <param name="Offset scaleSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="Offset scaleUseCurve">true</param> <param name="Offset scaleValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">0.4</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureDarken"><![CDATA[false]]></param> <param name="PressureDensity">false</param> <param name="PressureLine width">false</param> <param name="PressureMirror"><![CDATA[false]]></param> <param name="PressureMix"><![CDATA[false]]></param> <param name="PressureOffset scale">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter"><![CDATA[false]]></param> <param name="PressureSharpness"><![CDATA[false]]></param> <param name="PressureSize">false</param> <param name="PressureSoftness"><![CDATA[false]]></param> <param name="PressureSpacing"><![CDATA[false]]></param> <param name="Pressureh"><![CDATA[false]]></param> <param name="Pressures"><![CDATA[false]]></param> <param name="Pressurev"><![CDATA[false]]></param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve"><![CDATA[true]]></param> <param name="ScatterValue"><![CDATA[1]]></param> <param name="Scattering/AxisX"><![CDATA[true]]></param> <param name="Scattering/AxisY"><![CDATA[true]]></param> <param name="Sharpness/threshold"><![CDATA[4]]></param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve"><![CDATA[true]]></param> <param name="SharpnessValue"><![CDATA[1]]></param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="Sketch/distanceDensity">false</param> <param name="Sketch/distanceOpacity">false</param> <param name="Sketch/lineWidth">10</param> <param name="Sketch/magnetify">true</param> <param name="Sketch/makeConnection">true</param> <param name="Sketch/offset">30</param> <param name="Sketch/probability">0.5</param> <param name="Sketch/randomOpacity">false</param> <param name="Sketch/randomRGB">false</param> <param name="Sketch/simpleMode">true</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve"><![CDATA[true]]></param> <param name="SoftnessValue"><![CDATA[1]]></param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve"><![CDATA[true]]></param> <param name="SpacingValue"><![CDATA[1]]></param> <param name="VerticalMirrorEnabled"><![CDATA[false]]></param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="128"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve"><![CDATA[true]]></param> <param name="hValue"><![CDATA[1]]></param> <param name="paintop"><![CDATA[sketchbrush]]></param> <param name="requiredBrushFile"><![CDATA[Z_Pixel_4x4_rounded.gbr]]></param> <param name="runtimeCanvasRotation"><![CDATA[0]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve"><![CDATA[true]]></param> <param name="sValue"><![CDATA[1]]></param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve"><![CDATA[true]]></param> <param name="vValue"><![CDATA[1]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "0.4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureLine width"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOffset scale"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/lineWidth"  =  QVariant(QString, "10")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/magnetify"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/makeConnection"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/offset"  =  QVariant(QString, "30")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/probability"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomRGB"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/simpleMode"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="128"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "sketchbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "Z_Pixel_4x4_rounded.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_mix_over_wet.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_mix_over_wet" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">0.3</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">true</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.015625,0.979695;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">true</param> <param name="PressureGradient">false</param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSize">true</param> <param name="PressureSmudgeRate">true</param> <param name="PressureSpacing">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.51</param> <param name="Scattering/Amount"><![CDATA[0.51]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">0.6</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.578314,0.177884;1,0.586539;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle3.gbr]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.3")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.015625,0.979695;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.578314,0.177884;1,0.586539;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle3.gbr")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Splat_mix_cells.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Splat_mix_cells" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">0.3</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">false</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1.48368e-67,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">true</param> <param name="PressureGradient">false</param> <param name="PressureOpacity"><![CDATA[false]]></param> <param name="PressureRotation">true</param> <param name="PressureScatter">true</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate">true</param> <param name="PressureSpacing">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,0.248731;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.51</param> <param name="Scattering/Amount"><![CDATA[0.51]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">0.28</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.492386;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle3.gbr]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.3")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1.48368e-67,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,0.248731;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.492386;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle3.gbr")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_Airbrush.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_Airbrush" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">true</param> <param name="AirbrushOption/rate">100</param> <param name="ColorOption/colorPerParticle"><![CDATA[false]]></param> <param name="ColorOption/fillBackground"><![CDATA[false]]></param> <param name="ColorOption/hue"><![CDATA[0]]></param> <param name="ColorOption/mixBgColor"><![CDATA[false]]></param> <param name="ColorOption/sampleInputColor"><![CDATA[false]]></param> <param name="ColorOption/saturation"><![CDATA[0]]></param> <param name="ColorOption/useRandomHSV"><![CDATA[false]]></param> <param name="ColorOption/useRandomOpacity"><![CDATA[false]]></param> <param name="ColorOption/value"><![CDATA[0]]></param> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve"><![CDATA[true]]></param> <param name="ColorRateValue"><![CDATA[0.28]]></param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="Experiment/displacement"><![CDATA[42]]></param> <param name="Experiment/displacementEnabled"><![CDATA[false]]></param> <param name="Experiment/smoothing"><![CDATA[false]]></param> <param name="Experiment/speed"><![CDATA[42]]></param> <param name="Experiment/speedEnabled"><![CDATA[false]]></param> <param name="FlowValue">0.23</param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve"><![CDATA[true]]></param> <param name="GradientValue"><![CDATA[1]]></param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MergedPaint"><![CDATA[false]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.739555,0.514079;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureColorRate"><![CDATA[true]]></param> <param name="PressureDarken">false</param> <param name="PressureGradient"><![CDATA[false]]></param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate"><![CDATA[true]]></param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">2</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve"><![CDATA[true]]></param> <param name="SmudgeRateValue"><![CDATA[0.56]]></param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="Texture/Pattern/CutoffLeft">0</param> <param name="Texture/Pattern/CutoffPolicy">0</param> <param name="Texture/Pattern/CutoffRight">255</param> <param name="Texture/Pattern/Enabled">false</param> <param name="Texture/Pattern/Invert">false</param> <param name="Texture/Pattern/Name"><![CDATA[Canvas 01]]></param> <param name="Texture/Pattern/OffsetX">0</param> <param name="Texture/Pattern/OffsetY">0</param> <param name="Texture/Pattern/Pattern">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</param> <param name="Texture/Pattern/PatternFileName"><![CDATA[/home/timo/kde4/inst/share/apps/krita/patterns/Canvas_01.pat]]></param> <param name="Texture/Pattern/Scale">1</param> <param name="Texture/Pattern/Strength">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.2" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0" id="soft" spikes="2" hfade="0" softness_curve="0,0.495496;0.253012,0.198198;0.554217,0.0341859;1,0;" diameter="250"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[Z_Pixel_4x4_rounded.gbr]]></param> <param name="runtimeCanvasRotation">0</param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>
"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/colorPerParticle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/fillBackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/hue"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/mixBgColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/sampleInputColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/saturation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomHSV"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/value"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacement"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacementEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/smoothing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speed"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speedEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "0.23")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.739555,0.514079;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.56")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffLeft"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffPolicy"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffRight"  =  QVariant(QString, "255")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Invert"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Name"  =  QVariant(QString, "Canvas 01")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetX"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetY"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Pattern"  =  QVariant(QString, "
")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/PatternFileName"  =  QVariant(QString, "/home/timo/kde4/inst/share/apps/krita/patterns/Canvas_01.pat")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Scale"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Strength"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.2" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0" id="soft" spikes="2" hfade="0" softness_curve="0,0.495496;0.253012,0.198198;0.554217,0.0341859;1,0;" diameter="250"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "Z_Pixel_4x4_rounded.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Sketch_ink_dirty_xl.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Sketch_ink_dirty_xl" paintopid="sketchbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveOpacity"><![CDATA[0,0;0.5,1;]]></param> <param name="CurveRotation"><![CDATA[0,0;1,1;]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomOpacity"><![CDATA[true]]></param> <param name="CustomRotation"><![CDATA[true]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="DensitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="DensityUseCurve">true</param> <param name="DensityValue">1</param> <param name="Line widthSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="Line widthUseCurve">true</param> <param name="Line widthValue">1</param> <param name="Offset scaleSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="Offset scaleUseCurve">true</param> <param name="Offset scaleValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureDensity">false</param> <param name="PressureLine width">false</param> <param name="PressureOffset scale">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="Sketch/distanceDensity">false</param> <param name="Sketch/distanceOpacity">false</param> <param name="Sketch/lineWidth">8</param> <param name="Sketch/magnetify">true</param> <param name="Sketch/makeConnection">true</param> <param name="Sketch/offset">30</param> <param name="Sketch/probability">0.5</param> <param name="Sketch/randomOpacity">false</param> <param name="Sketch/randomRGB">false</param> <param name="Sketch/simpleMode">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="128"/> </Brush> ]]></param> <param name="paintop"><![CDATA[sketchbrush]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveOpacity"  =  QVariant(QString, "0,0;0.5,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveRotation"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureLine width"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOffset scale"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/lineWidth"  =  QVariant(QString, "8")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/magnetify"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/makeConnection"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/offset"  =  QVariant(QString, "30")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/probability"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomRGB"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/simpleMode"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="128"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "sketchbrush")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Hatch_cross_small.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Hatch_cross_small" paintopid="hatchingbrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CrosshatchingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="CrosshatchingUseCurve">true</param> <param name="CrosshatchingValue">1</param> <param name="CurveCrosshatching"><![CDATA[0,0;1,1;]]></param> <param name="CurveOpacity"><![CDATA[0,0;1,1;]]></param> <param name="CurveSeparation"><![CDATA[0,0;1,1;]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CurveThickness"><![CDATA[0,0;1,1;]]></param> <param name="CustomCrosshatching"><![CDATA[true]]></param> <param name="CustomOpacity"><![CDATA[true]]></param> <param name="CustomSeparation"><![CDATA[true]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="CustomThickness"><![CDATA[true]]></param> <param name="Hatching/Version"><![CDATA[1]]></param> <param name="Hatching/angle">45</param> <param name="Hatching/bool_antialias">true</param> <param name="Hatching/bool_minusthenplus">false</param> <param name="Hatching/bool_moirepattern">false</param> <param name="Hatching/bool_nocrosshatching">false</param> <param name="Hatching/bool_opaquebackground">false</param> <param name="Hatching/bool_perpendicular">true</param> <param name="Hatching/bool_plusthenminus">false</param> <param name="Hatching/bool_subpixelprecision">true</param> <param name="Hatching/origin_x">50</param> <param name="Hatching/origin_y">50</param> <param name="Hatching/separation">6</param> <param name="Hatching/separationintervals">5</param> <param name="Hatching/thickness">4</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureCrosshatching">false</param> <param name="PressureOpacity"><![CDATA[false]]></param> <param name="PressureSeparation">false</param> <param name="PressureSize">true</param> <param name="PressureThickness">false</param> <param name="SeparationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SeparationUseCurve">true</param> <param name="SeparationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="ThicknessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ThicknessUseCurve">true</param> <param name="ThicknessValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="1" id="default" spikes="2" hfade="1" diameter="40.6"/> </Brush> ]]></param> <param name="paintop"><![CDATA[hatchingbrush]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CrosshatchingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CrosshatchingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CrosshatchingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveCrosshatching"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveOpacity"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSeparation"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveThickness"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomCrosshatching"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSeparation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomThickness"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/Version"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/angle"  =  QVariant(QString, "45")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_antialias"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_minusthenplus"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_moirepattern"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_nocrosshatching"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_opaquebackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_perpendicular"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_plusthenminus"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_subpixelprecision"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/origin_x"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/origin_y"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/separation"  =  QVariant(QString, "6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/separationintervals"  =  QVariant(QString, "5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/thickness"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureCrosshatching"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSeparation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureThickness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SeparationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SeparationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SeparationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ThicknessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ThicknessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ThicknessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="1" id="default" spikes="2" hfade="1" diameter="40.6"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hatchingbrush")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Texture_paint_noisy_cells.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Texture_paint_noisy_cells" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorOption/colorPerParticle"><![CDATA[false]]></param> <param name="ColorOption/fillBackground"><![CDATA[false]]></param> <param name="ColorOption/hue"><![CDATA[0]]></param> <param name="ColorOption/mixBgColor"><![CDATA[false]]></param> <param name="ColorOption/sampleInputColor"><![CDATA[false]]></param> <param name="ColorOption/saturation"><![CDATA[0]]></param> <param name="ColorOption/useRandomHSV"><![CDATA[false]]></param> <param name="ColorOption/useRandomOpacity"><![CDATA[false]]></param> <param name="ColorOption/value"><![CDATA[0]]></param> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve"><![CDATA[true]]></param> <param name="ColorRateValue"><![CDATA[0.28]]></param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="Experiment/displacement"><![CDATA[42]]></param> <param name="Experiment/displacementEnabled"><![CDATA[false]]></param> <param name="Experiment/smoothing"><![CDATA[false]]></param> <param name="Experiment/speed"><![CDATA[42]]></param> <param name="Experiment/speedEnabled"><![CDATA[false]]></param> <param name="FlowValue">1</param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve"><![CDATA[true]]></param> <param name="GradientValue"><![CDATA[1]]></param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MergedPaint"><![CDATA[false]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.214634;0.526104,0.512195;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureColorRate"><![CDATA[true]]></param> <param name="PressureDarken">false</param> <param name="PressureGradient"><![CDATA[false]]></param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">true</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate"><![CDATA[true]]></param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"/> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="ShapeDynamics/enabled"><![CDATA[true]]></param> <param name="ShapeDynamics/fixedAngle"><![CDATA[30]]></param> <param name="ShapeDynamics/fixedRotation"><![CDATA[false]]></param> <param name="ShapeDynamics/followCursor"><![CDATA[false]]></param> <param name="ShapeDynamics/followCursorWeigth"><![CDATA[1]]></param> <param name="ShapeDynamics/followDrawingAngle"><![CDATA[false]]></param> <param name="ShapeDynamics/followDrawingAngleWeigth"><![CDATA[1]]></param> <param name="ShapeDynamics/randomRotation"><![CDATA[false]]></param> <param name="ShapeDynamics/randomRotationWeight"><![CDATA[0.5]]></param> <param name="ShapeDynamics/randomSize"><![CDATA[true]]></param> <param name="ShapeDynamicsVersion"><![CDATA[2.3]]></param> <param name="Sharpness/threshold">40</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.630522,0.373494;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve"><![CDATA[true]]></param> <param name="SmudgeRateValue"><![CDATA[0.56]]></param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="Spray/aspect"><![CDATA[1]]></param> <param name="Spray/coverage"><![CDATA[0.1]]></param> <param name="Spray/diameter"><![CDATA[100]]></param> <param name="Spray/gaussianDistribution"><![CDATA[false]]></param> <param name="Spray/jitterMoveAmount"><![CDATA[1]]></param> <param name="Spray/jitterMovement"><![CDATA[false]]></param> <param name="Spray/particleCount"><![CDATA[12]]></param> <param name="Spray/rotation"><![CDATA[0]]></param> <param name="Spray/scale"><![CDATA[1]]></param> <param name="Spray/spacing"><![CDATA[0.5]]></param> <param name="Spray/useDensity"><![CDATA[false]]></param> <param name="SprayShape/enabled"><![CDATA[true]]></param> <param name="SprayShape/height"><![CDATA[6]]></param> <param name="SprayShape/imageUrl"><![CDATA[]]></param> <param name="SprayShape/proportional"><![CDATA[false]]></param> <param name="SprayShape/shape"><![CDATA[0]]></param> <param name="SprayShape/useAspect"><![CDATA[true]]></param> <param name="SprayShape/width"><![CDATA[6]]></param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_reptile-skin.gih" spacing="0.2" angle="0"/> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_reptile-skin.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/colorPerParticle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/fillBackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/hue"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/mixBgColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/sampleInputColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/saturation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomHSV"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/value"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacement"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacementEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/smoothing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speed"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speedEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.214634;0.526104,0.512195;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/enabled"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/fixedAngle"  =  QVariant(QString, "30")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/fixedRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followCursor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followCursorWeigth"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followDrawingAngle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followDrawingAngleWeigth"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomRotationWeight"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamicsVersion"  =  QVariant(QString, "2.3")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "40")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.630522,0.373494;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.56")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/aspect"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/coverage"  =  QVariant(QString, "0.1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/diameter"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/gaussianDistribution"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/jitterMoveAmount"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/jitterMovement"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/particleCount"  =  QVariant(QString, "12")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/rotation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/scale"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/spacing"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/useDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/enabled"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/height"  =  QVariant(QString, "6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/imageUrl"  =  QVariant(QString, "")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/proportional"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/shape"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/useAspect"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/width"  =  QVariant(QString, "6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_reptile-skin.gih" spacing="0.2" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_reptile-skin.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_paint_shade.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_paint_shade" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorOption/colorPerParticle"><![CDATA[false]]></param> <param name="ColorOption/fillBackground"><![CDATA[false]]></param> <param name="ColorOption/hue"><![CDATA[0]]></param> <param name="ColorOption/mixBgColor"><![CDATA[false]]></param> <param name="ColorOption/sampleInputColor"><![CDATA[false]]></param> <param name="ColorOption/saturation"><![CDATA[0]]></param> <param name="ColorOption/useRandomHSV"><![CDATA[false]]></param> <param name="ColorOption/useRandomOpacity"><![CDATA[false]]></param> <param name="ColorOption/value"><![CDATA[0]]></param> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve"><![CDATA[true]]></param> <param name="ColorRateValue"><![CDATA[0.28]]></param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="Experiment/displacement"><![CDATA[42]]></param> <param name="Experiment/displacementEnabled"><![CDATA[false]]></param> <param name="Experiment/smoothing"><![CDATA[false]]></param> <param name="Experiment/speed"><![CDATA[42]]></param> <param name="Experiment/speedEnabled"><![CDATA[false]]></param> <param name="FlowValue">1</param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve"><![CDATA[true]]></param> <param name="GradientValue"><![CDATA[1]]></param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MergedPaint"><![CDATA[false]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.614458,0.0883534;1,0.216867;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureColorRate"><![CDATA[true]]></param> <param name="PressureDarken">false</param> <param name="PressureGradient"><![CDATA[false]]></param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate"><![CDATA[true]]></param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="ShapeDynamics/enabled"><![CDATA[true]]></param> <param name="ShapeDynamics/fixedAngle"><![CDATA[30]]></param> <param name="ShapeDynamics/fixedRotation"><![CDATA[false]]></param> <param name="ShapeDynamics/followCursor"><![CDATA[false]]></param> <param name="ShapeDynamics/followCursorWeigth"><![CDATA[1]]></param> <param name="ShapeDynamics/followDrawingAngle"><![CDATA[false]]></param> <param name="ShapeDynamics/followDrawingAngleWeigth"><![CDATA[1]]></param> <param name="ShapeDynamics/randomRotation"><![CDATA[false]]></param> <param name="ShapeDynamics/randomRotationWeight"><![CDATA[0.5]]></param> <param name="ShapeDynamics/randomSize"><![CDATA[true]]></param> <param name="ShapeDynamicsVersion"><![CDATA[2.3]]></param> <param name="Sharpness/threshold">40</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.285141,0.413655;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve"><![CDATA[true]]></param> <param name="SmudgeRateValue"><![CDATA[0.56]]></param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="Spray/aspect"><![CDATA[1]]></param> <param name="Spray/coverage"><![CDATA[0.1]]></param> <param name="Spray/diameter"><![CDATA[100]]></param> <param name="Spray/gaussianDistribution"><![CDATA[false]]></param> <param name="Spray/jitterMoveAmount"><![CDATA[1]]></param> <param name="Spray/jitterMovement"><![CDATA[false]]></param> <param name="Spray/particleCount"><![CDATA[12]]></param> <param name="Spray/rotation"><![CDATA[0]]></param> <param name="Spray/scale"><![CDATA[1]]></param> <param name="Spray/spacing"><![CDATA[0.5]]></param> <param name="Spray/useDensity"><![CDATA[false]]></param> <param name="SprayShape/enabled"><![CDATA[true]]></param> <param name="SprayShape/height"><![CDATA[6]]></param> <param name="SprayShape/imageUrl"><![CDATA[]]></param> <param name="SprayShape/proportional"><![CDATA[false]]></param> <param name="SprayShape/shape"><![CDATA[0]]></param> <param name="SprayShape/useAspect"><![CDATA[true]]></param> <param name="SprayShape/width"><![CDATA[6]]></param> <param name="Texture/Pattern/CutoffLeft">0</param> <param name="Texture/Pattern/CutoffPolicy">0</param> <param name="Texture/Pattern/CutoffRight">255</param> <param name="Texture/Pattern/Enabled">false</param> <param name="Texture/Pattern/Invert">false</param> <param name="Texture/Pattern/Name"><![CDATA[Canvas 01]]></param> <param name="Texture/Pattern/OffsetX">0</param> <param name="Texture/Pattern/OffsetY">0</param> <param name="Texture/Pattern/Pattern"></param> <param name="Texture/Pattern/PatternFileName"><![CDATA[/home/timo/kde4/inst/share/apps/krita/patterns/Canvas_01.pat]]></param> <param name="Texture/Pattern/Scale">1</param> <param name="Texture/Pattern/Strength">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.85" id="default" spikes="2" hfade="0.85" diameter="50"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_starfield2.gih]]></param> <param name="runtimeCanvasRotation">0</param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>
"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/colorPerParticle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/fillBackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/hue"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/mixBgColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/sampleInputColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/saturation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomHSV"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/value"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacement"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacementEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/smoothing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speed"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speedEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.614458,0.0883534;1,0.216867;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/enabled"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/fixedAngle"  =  QVariant(QString, "30")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/fixedRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followCursor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followCursorWeigth"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followDrawingAngle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/followDrawingAngleWeigth"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomRotationWeight"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamics/randomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ShapeDynamicsVersion"  =  QVariant(QString, "2.3")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "40")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.285141,0.413655;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.56")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/aspect"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/coverage"  =  QVariant(QString, "0.1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/diameter"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/gaussianDistribution"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/jitterMoveAmount"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/jitterMovement"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/particleCount"  =  QVariant(QString, "12")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/rotation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/scale"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/spacing"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Spray/useDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/enabled"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/height"  =  QVariant(QString, "6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/imageUrl"  =  QVariant(QString, "")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/proportional"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/shape"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/useAspect"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SprayShape/width"  =  QVariant(QString, "6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffLeft"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffPolicy"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffRight"  =  QVariant(QString, "255")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Invert"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Name"  =  QVariant(QString, "Canvas 01")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetX"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetY"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Pattern"  =  QVariant(QString, "
")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/PatternFileName"  =  QVariant(QString, "/home/timo/kde4/inst/share/apps/krita/patterns/Canvas_01.pat")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Scale"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Strength"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.85" id="default" spikes="2" hfade="0.85" diameter="50"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_starfield2.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_mix_over_wet_dull.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_mix_over_wet_dull" paintopid="colorsmudge"> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0.497992,0;0.674699,0.64257;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve">true</param> <param name="ColorRateValue">0.3</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve">true</param> <param name="GradientValue">1</param> <param name="MergedPaint">true</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.015625,0.979695;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PressureColorRate">true</param> <param name="PressureGradient">false</param> <param name="PressureRotation">true</param> <param name="PressureScatter">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate">true</param> <param name="PressureSpacing">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">0.51</param> <param name="Scattering/Amount"><![CDATA[0.51]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateMode">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve">true</param> <param name="SmudgeRateValue">0.6</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.578314,0.177884;1,0.586539;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ]]></param> <param name="paintop"><![CDATA[colorsmudge]]></param> <param name="requiredBrushFile"><![CDATA[A_sparkle3.gbr]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0.497992,0;0.674699,0.64257;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.3")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.015625,0.979695;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.674699,0.344444;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "0.51")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.60241,0.374999;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateMode"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.6")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.578314,0.177884;1,0.586539;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_sparkle3.gbr" spacing="0.04" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "colorsmudge")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_sparkle3.gbr")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Hatch_moire.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Hatch_moire" paintopid="hatchingbrush"> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CrosshatchingSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="CrosshatchingUseCurve">true</param> <param name="CrosshatchingValue">1</param> <param name="Hatching/Version"><![CDATA[2]]></param> <param name="Hatching/angle">45</param> <param name="Hatching/bool_antialias">true</param> <param name="Hatching/bool_minusthenplus">false</param> <param name="Hatching/bool_moirepattern">true</param> <param name="Hatching/bool_nocrosshatching">false</param> <param name="Hatching/bool_opaquebackground">false</param> <param name="Hatching/bool_perpendicular">false</param> <param name="Hatching/bool_plusthenminus">false</param> <param name="Hatching/bool_subpixelprecision">true</param> <param name="Hatching/origin_x">0</param> <param name="Hatching/origin_y">0</param> <param name="Hatching/separation">6.1</param> <param name="Hatching/separationintervals">2</param> <param name="Hatching/thickness">6.1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.627049,0.433735;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureCrosshatching">true</param> <param name="PressureSeparation">false</param> <param name="PressureSize">false</param> <param name="PressureThickness">false</param> <param name="SeparationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SeparationUseCurve">true</param> <param name="SeparationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="ThicknessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.618474,0.46988;1,1;</curve> </params> ]]></param> <param name="ThicknessUseCurve">true</param> <param name="ThicknessValue">1</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.45" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="83.05"/> </Brush> ]]></param> <param name="paintop"><![CDATA[hatchingbrush]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CrosshatchingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CrosshatchingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CrosshatchingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/Version"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/angle"  =  QVariant(QString, "45")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_antialias"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_minusthenplus"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_moirepattern"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_nocrosshatching"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_opaquebackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_perpendicular"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_plusthenminus"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/bool_subpixelprecision"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/origin_x"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/origin_y"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/separation"  =  QVariant(QString, "6.1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/separationintervals"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Hatching/thickness"  =  QVariant(QString, "6.1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.627049,0.433735;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureCrosshatching"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSeparation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureThickness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SeparationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SeparationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SeparationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ThicknessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.618474,0.46988;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ThicknessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ThicknessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.45" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="83.05"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "hatchingbrush")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_ink_05.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_ink_05" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">1</param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.6875,0.488889;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureDarken">false</param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">true</param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">4</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0" id="gauss" spikes="2" hfade="0" diameter="5"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_starfield2.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.6875,0.488889;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0" id="gauss" spikes="2" hfade="0" diameter="5"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_starfield2.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Pencil_2B.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Pencil_2B" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">1</param> <param name="HorizontalMirrorEnabled">false</param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0.0128398,0;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">0.23</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureDarken">false</param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">true</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">true</param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/Amount"><![CDATA[1]]></param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/factor"><![CDATA[1]]></param> <param name="Sharpness/threshold">4</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.696682,0.370166;1,0.994475;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="Texture/Pattern/CutoffLeft">0</param> <param name="Texture/Pattern/CutoffPolicy">0</param> <param name="Texture/Pattern/CutoffRight">255</param> <param name="Texture/Pattern/Enabled">false</param> <param name="Texture/Pattern/Invert">false</param> <param name="Texture/Pattern/Name"><![CDATA[Canvas 01]]></param> <param name="Texture/Pattern/OffsetX">0</param> <param name="Texture/Pattern/OffsetY">0</param> <param name="Texture/Pattern/Pattern"></param> <param name="Texture/Pattern/PatternFileName"><![CDATA[/home/timo/kde4/inst/share/apps/krita/patterns/Canvas_01.pat]]></param> <param name="Texture/Pattern/Scale">1</param> <param name="Texture/Pattern/Strength">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="z_study_pencil_H_h.gih" spacing="0.05" angle="0"/> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[z_study_pencil_H_h.gih]]></param> <param name="runtimeCanvasRotation">0</param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>
"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0.0128398,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "0.23")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="drawingangle"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/Amount"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/factor"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.696682,0.370166;1,0.994475;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffLeft"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffPolicy"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffRight"  =  QVariant(QString, "255")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Invert"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Name"  =  QVariant(QString, "Canvas 01")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetX"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetY"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Pattern"  =  QVariant(QString, "
")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/PatternFileName"  =  QVariant(QString, "/home/timo/kde4/inst/share/apps/krita/patterns/Canvas_01.pat")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Scale"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Strength"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="z_study_pencil_H_h.gih" spacing="0.05" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "z_study_pencil_H_h.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Pencil_HB.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Pencil_HB" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">0.3</param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.691964,0.272022;1,0.393574;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureDarken">false</param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">true</param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">4</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.24498;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="Texture/Pattern/CutoffLeft">0</param> <param name="Texture/Pattern/CutoffPolicy">0</param> <param name="Texture/Pattern/CutoffRight">255</param> <param name="Texture/Pattern/Enabled">false</param> <param name="Texture/Pattern/Invert">false</param> <param name="Texture/Pattern/Name"><![CDATA[Canvas 01]]></param> <param name="Texture/Pattern/OffsetX">0</param> <param name="Texture/Pattern/OffsetY">0</param> <param name="Texture/Pattern/Pattern"></param> <param name="Texture/Pattern/PatternFileName"><![CDATA[/home/timo/kde4/inst/share/apps/krita/patterns/Canvas_01.pat]]></param> <param name="Texture/Pattern/Scale">1</param> <param name="Texture/Pattern/Strength">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_eroded-cercle-anim.gih" spacing="0.2" angle="0"/> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[A_eroded-cercle-anim.gih]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>
"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "0.3")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.691964,0.272022;1,0.393574;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,0.24498;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffLeft"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffPolicy"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffRight"  =  QVariant(QString, "255")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Invert"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Name"  =  QVariant(QString, "Canvas 01")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetX"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetY"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Pattern"  =  QVariant(QString, "
")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/PatternFileName"  =  QVariant(QString, "/home/timo/kde4/inst/share/apps/krita/patterns/Canvas_01.pat")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Scale"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Strength"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush scale="1" type="gbr_brush" BrushVersion="2" filename="A_eroded-cercle-anim.gih" spacing="0.2" angle="0"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "A_eroded-cercle-anim.gih")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_Airbrush_noisy.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_Airbrush_noisy" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">true</param> <param name="AirbrushOption/rate">100</param> <param name="ColorOption/colorPerParticle"><![CDATA[false]]></param> <param name="ColorOption/fillBackground"><![CDATA[false]]></param> <param name="ColorOption/hue"><![CDATA[0]]></param> <param name="ColorOption/mixBgColor"><![CDATA[false]]></param> <param name="ColorOption/sampleInputColor"><![CDATA[false]]></param> <param name="ColorOption/saturation"><![CDATA[0]]></param> <param name="ColorOption/useRandomHSV"><![CDATA[false]]></param> <param name="ColorOption/useRandomOpacity"><![CDATA[false]]></param> <param name="ColorOption/value"><![CDATA[0]]></param> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve"><![CDATA[true]]></param> <param name="ColorRateValue"><![CDATA[0.28]]></param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="Experiment/displacement"><![CDATA[42]]></param> <param name="Experiment/displacementEnabled"><![CDATA[false]]></param> <param name="Experiment/smoothing"><![CDATA[false]]></param> <param name="Experiment/speed"><![CDATA[42]]></param> <param name="Experiment/speedEnabled"><![CDATA[false]]></param> <param name="FlowValue">0.23</param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve"><![CDATA[true]]></param> <param name="GradientValue"><![CDATA[1]]></param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MergedPaint"><![CDATA[false]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.739555,0.514079;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureColorRate"><![CDATA[true]]></param> <param name="PressureDarken">false</param> <param name="PressureGradient"><![CDATA[false]]></param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate"><![CDATA[true]]></param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">2</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve"><![CDATA[true]]></param> <param name="SmudgeRateValue"><![CDATA[0.56]]></param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="Texture/Pattern/CutoffLeft">0</param> <param name="Texture/Pattern/CutoffPolicy">0</param> <param name="Texture/Pattern/CutoffRight">255</param> <param name="Texture/Pattern/Enabled">false</param> <param name="Texture/Pattern/Invert">false</param> <param name="Texture/Pattern/Name"><![CDATA[Canvas 01]]></param> <param name="Texture/Pattern/OffsetX">0</param> <param name="Texture/Pattern/OffsetY">0</param> <param name="Texture/Pattern/Pattern"></param> <param name="Texture/Pattern/PatternFileName"><![CDATA[/home/timo/kde4/inst/share/apps/krita/patterns/Canvas_01.pat]]></param> <param name="Texture/Pattern/Scale">1</param> <param name="Texture/Pattern/Strength">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="1" density="1" BrushVersion="2" spacing="0.2" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0" id="soft" spikes="2" hfade="0" softness_curve="0,0.495496;0.253012,0.198198;0.554217,0.0341859;1,0;" diameter="250"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[Z_Pixel_4x4_rounded.gbr]]></param> <param name="runtimeCanvasRotation">0</param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>
"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/colorPerParticle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/fillBackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/hue"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/mixBgColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/sampleInputColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/saturation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomHSV"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/value"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="fuzzy"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacement"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacementEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/smoothing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speed"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speedEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "0.23")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.739555,0.514079;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.56")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.124498,0.341365;0.502008,0.875502;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffLeft"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffPolicy"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/CutoffRight"  =  QVariant(QString, "255")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Enabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Invert"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Name"  =  QVariant(QString, "Canvas 01")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetX"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/OffsetY"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Pattern"  =  QVariant(QString, "
")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/PatternFileName"  =  QVariant(QString, "/home/timo/kde4/inst/share/apps/krita/patterns/Canvas_01.pat")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Scale"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Texture/Pattern/Strength"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="1" density="1" BrushVersion="2" spacing="0.2" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0" id="soft" spikes="2" hfade="0" softness_curve="0,0.495496;0.253012,0.198198;0.554217,0.0341859;1,0;" diameter="250"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "Z_Pixel_4x4_rounded.gbr")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "runtimeCanvasRotation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Sketch_fur.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Sketch_fur" paintopid="sketchbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveOpacity"><![CDATA[0,0;1,0.253012;]]></param> <param name="CurveRotation"><![CDATA[0,0;1,1;]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomOpacity"><![CDATA[true]]></param> <param name="CustomRotation"><![CDATA[true]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="DensitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="DensityUseCurve">true</param> <param name="DensityValue">1</param> <param name="Line widthSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="Line widthUseCurve">true</param> <param name="Line widthValue">1</param> <param name="Offset scaleSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="Offset scaleUseCurve">true</param> <param name="Offset scaleValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,0.253012;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureDensity">false</param> <param name="PressureLine width">false</param> <param name="PressureOffset scale">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="Sketch/distanceDensity">true</param> <param name="Sketch/distanceOpacity">false</param> <param name="Sketch/lineWidth">1</param> <param name="Sketch/magnetify">false</param> <param name="Sketch/makeConnection">true</param> <param name="Sketch/offset">50</param> <param name="Sketch/probability">1</param> <param name="Sketch/randomOpacity">false</param> <param name="Sketch/randomRGB">false</param> <param name="Sketch/simpleMode">true</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="88"/> </Brush> ]]></param> <param name="paintop"><![CDATA[sketchbrush]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveOpacity"  =  QVariant(QString, "0,0;1,0.253012;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveRotation"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,0.253012;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureLine width"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOffset scale"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceDensity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/lineWidth"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/magnetify"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/makeConnection"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/offset"  =  QVariant(QString, "50")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/probability"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomRGB"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/simpleMode"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="88"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "sketchbrush")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Sketch_ink_dirty.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Sketch_ink_dirty" paintopid="sketchbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="CurveOpacity"><![CDATA[0,0;1,1;]]></param> <param name="CurveRotation"><![CDATA[0,0;1,1;]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomOpacity"><![CDATA[true]]></param> <param name="CustomRotation"><![CDATA[true]]></param> <param name="CustomSize"><![CDATA[true]]></param> <param name="DensitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="DensityUseCurve">true</param> <param name="DensityValue">1</param> <param name="Line widthSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="Line widthUseCurve">true</param> <param name="Line widthValue">1</param> <param name="Offset scaleSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="Offset scaleUseCurve">true</param> <param name="Offset scaleValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">1</param> <param name="PressureDensity">false</param> <param name="PressureLine width">false</param> <param name="PressureOffset scale">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">false</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="Sketch/distanceDensity">false</param> <param name="Sketch/distanceOpacity">false</param> <param name="Sketch/lineWidth">2</param> <param name="Sketch/magnetify">true</param> <param name="Sketch/makeConnection">true</param> <param name="Sketch/offset">30</param> <param name="Sketch/probability">0.5</param> <param name="Sketch/randomOpacity">false</param> <param name="Sketch/randomRGB">false</param> <param name="Sketch/simpleMode">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="128"/> </Brush> ]]></param> <param name="paintop"><![CDATA[sketchbrush]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveOpacity"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveRotation"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DensityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Line widthValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Offset scaleValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureLine width"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOffset scale"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceDensity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/distanceOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/lineWidth"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/magnetify"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/makeConnection"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/offset"  =  QVariant(QString, "30")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/probability"  =  QVariant(QString, "0.5")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/randomRGB"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sketch/simpleMode"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.5" id="default" spikes="2" hfade="0.5" diameter="128"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "sketchbrush")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Texture_paint_noisy_big.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Texture_paint_noisy_big" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorOption/colorPerParticle"><![CDATA[false]]></param> <param name="ColorOption/fillBackground"><![CDATA[false]]></param> <param name="ColorOption/hue"><![CDATA[0]]></param> <param name="ColorOption/mixBgColor"><![CDATA[false]]></param> <param name="ColorOption/sampleInputColor"><![CDATA[false]]></param> <param name="ColorOption/saturation"><![CDATA[0]]></param> <param name="ColorOption/useRandomHSV"><![CDATA[false]]></param> <param name="ColorOption/useRandomOpacity"><![CDATA[false]]></param> <param name="ColorOption/value"><![CDATA[0]]></param> <param name="ColorRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ColorRateUseCurve"><![CDATA[true]]></param> <param name="ColorRateValue"><![CDATA[0.28]]></param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="Experiment/displacement"><![CDATA[42]]></param> <param name="Experiment/displacementEnabled"><![CDATA[false]]></param> <param name="Experiment/smoothing"><![CDATA[false]]></param> <param name="Experiment/speed"><![CDATA[42]]></param> <param name="Experiment/speedEnabled"><![CDATA[false]]></param> <param name="FlowValue">1</param> <param name="GradientSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="GradientUseCurve"><![CDATA[true]]></param> <param name="GradientValue"><![CDATA[1]]></param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MergedPaint"><![CDATA[false]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0.214634;0.526104,0.512195;1,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">true</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureColorRate"><![CDATA[true]]></param> <param name="PressureDarken">false</param> <param name="PressureGradient"><![CDATA[false]]></param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[true]]></param> <param name="PressureRotation">true</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">false</param> <param name="PressureSmudgeRate"><![CDATA[true]]></param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="pressure"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor id="fuzzy"> <curve>0,0;1,1;</curve> </ChildSensor> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">40</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SmudgeRateSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ]]></param> <param name="SmudgeRateUseCurve"><![CDATA[true]]></param> <param name="SmudgeRateValue"><![CDATA[0.56]]></param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="png_brush" BrushVersion="2" filename="texture-a.png" spacing="0,25"/> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="requiredBrushFile"><![CDATA[texture-a.png]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/colorPerParticle"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/fillBackground"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/hue"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/mixBgColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/sampleInputColor"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/saturation"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomHSV"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/useRandomOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorOption/value"  =  QVariant(QString, "0")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorRateValue"  =  QVariant(QString, "0.28")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacement"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/displacementEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/smoothing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speed"  =  QVariant(QString, "42")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Experiment/speedEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "GradientValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MergedPaint"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0.214634;0.526104,0.512195;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureColorRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureGradient"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSmudgeRate"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="sensorslist"> <ChildSensor id="pressure"> <curve>0,0;1,1;</curve> </ChildSensor> <ChildSensor id="fuzzy"> <curve>0,0;1,1;</curve> </ChildSensor> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "40")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.313253,0.588542;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SmudgeRateValue"  =  QVariant(QString, "0.56")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="png_brush" BrushVersion="2" filename="texture-a.png" spacing="0,25"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "requiredBrushFile"  =  QVariant(QString, "texture-a.png")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/paintoppresets/Basic_paint_fill.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="Basic_paint_fill" paintopid="paintbrush"> <param name="AirbrushOption/isAirbrushing">false</param> <param name="AirbrushOption/rate">100</param> <param name="ColorSource/Type"><![CDATA[plain]]></param> <param name="CompositeOp"><![CDATA[normal]]></param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="DarkenUseCurve">true</param> <param name="DarkenValue">1</param> <param name="FlowValue">1</param> <param name="HorizontalMirrorEnabled">false</param> <param name="Krita/compositeop"><![CDATA[normal]]></param> <param name="Krita/erase"><![CDATA[false]]></param> <param name="Krita/mirrorhorizontal"><![CDATA[false]]></param> <param name="Krita/mirrorvertical"><![CDATA[false]]></param> <param name="Krita/opacity"><![CDATA[100]]></param> <param name="MirrorSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MirrorUseCurve">true</param> <param name="MirrorValue">1</param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="MixUseCurve">true</param> <param name="MixValue">1</param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ]]></param> <param name="OpacityUseCurve">false</param> <param name="OpacityValue">1</param> <param name="OpacityVersion"><![CDATA[2]]></param> <param name="PaintOpAction">2</param> <param name="PressureDarken">false</param> <param name="PressureMirror">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity"><![CDATA[false]]></param> <param name="PressureRotation">false</param> <param name="PressureScatter">false</param> <param name="PressureSharpness">false</param> <param name="PressureSize">true</param> <param name="PressureSoftness">false</param> <param name="PressureSpacing">false</param> <param name="Pressureh">false</param> <param name="Pressures">false</param> <param name="Pressurev">false</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="RotationUseCurve">true</param> <param name="RotationValue">1</param> <param name="ScatterSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="ScatterUseCurve">true</param> <param name="ScatterValue">1</param> <param name="Scattering/AxisX">true</param> <param name="Scattering/AxisY">true</param> <param name="Sharpness/threshold">4</param> <param name="SharpnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SharpnessUseCurve">true</param> <param name="SharpnessValue">1</param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.413655,0.333333;0.674699,0.772125;1,1;</curve> </params> ]]></param> <param name="SizeUseCurve">true</param> <param name="SizeValue">1</param> <param name="SoftnessSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SoftnessUseCurve">true</param> <param name="SoftnessValue">1</param> <param name="SpacingSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="SpacingUseCurve">true</param> <param name="SpacingValue">1</param> <param name="VerticalMirrorEnabled">false</param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.87" id="default" spikes="2" hfade="0.87" diameter="50"/> </Brush> ]]></param> <param name="hSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="hUseCurve">true</param> <param name="hValue">1</param> <param name="paintop"><![CDATA[paintbrush]]></param> <param name="sSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="sUseCurve">true</param> <param name="sValue">1</param> <param name="vSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ]]></param> <param name="vUseCurve">true</param> <param name="vValue">1</param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/isAirbrushing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "AirbrushOption/rate"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ColorSource/Type"  =  QVariant(QString, "plain")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CompositeOp"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "FlowValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "HorizontalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/compositeop"  =  QVariant(QString, "normal")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/erase"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorhorizontal"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/mirrorvertical"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Krita/opacity"  =  QVariant(QString, "100")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MirrorValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.5,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityUseCurve"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacityVersion"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMirror"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureScatter"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSharpness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSoftness"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSpacing"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressureh"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressures"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Pressurev"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "ScatterValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisX"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Scattering/AxisY"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "Sharpness/threshold"  =  QVariant(QString, "4")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SharpnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;0.413655,0.333333;0.674699,0.772125;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SoftnessValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SpacingValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "VerticalMirrorEnabled"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" randomness="0" density="1" BrushVersion="2" spacing="0.1" angle="0"> <MaskGenerator ratio="1" type="circle" vfade="0.87" id="default" spikes="2" hfade="0.87" diameter="50"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "hValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "sValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"> <curve>0,0;1,1;</curve> </params> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vUseCurve"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "vValue"  =  QVariant(QString, "1")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "height"  =  QVariant(QString, "2480")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "name"  =  QVariant(QString, "A5 (300 ppi)")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "resolution"  =  QVariant(QString, "300")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "width"  =  QVariant(QString, "1754")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "x-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "y-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "height"  =  QVariant(QString, "4960")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "name"  =  QVariant(QString, "A5 (600 ppi)")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "resolution"  =  QVariant(QString, "600")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "width"  =  QVariant(QString, "3508")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "x-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "y-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "height"  =  QVariant(QString, "4960")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "name"  =  QVariant(QString, "A3 (300 ppi)")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "resolution"  =  QVariant(QString, "300")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "width"  =  QVariant(QString, "3508")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "x-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "y-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "height"  =  QVariant(QString, "9920")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "name"  =  QVariant(QString, "A3 (600 ppi)")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "resolution"  =  QVariant(QString, "600")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "width"  =  QVariant(QString, "7016")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "x-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "y-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "height"  =  QVariant(QString, "7016")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "name"  =  QVariant(QString, "A4 (600 ppi)")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "resolution"  =  QVariant(QString, "600")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "width"  =  QVariant(QString, "4816")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "x-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "y-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "height"  =  QVariant(QString, "1754")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "name"  =  QVariant(QString, "A6 (300 ppi)")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "resolution"  =  QVariant(QString, "300")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "width"  =  QVariant(QString, "1240")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "x-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "y-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "height"  =  QVariant(QString, "3508")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "name"  =  QVariant(QString, "A6 (600 ppi)")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "resolution"  =  QVariant(QString, "600")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "width"  =  QVariant(QString, "2480")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "x-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "y-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "height"  =  QVariant(QString, "3508")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "name"  =  QVariant(QString, "A4 (300 ppi)")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "resolution"  =  QVariant(QString, "300")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "width"  =  QVariant(QString, "2408")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "x-unit"  =  QVariant(QString, "7")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "y-unit"  =  QVariant(QString, "7")
krita(25754)/krita (core) KisImage::KisImage: creating "unnamed"
krita(25754)/krita (core) KisNodeFacade::addNode: Add node  KisPaintLayer(0x33c51b0, name = "Layer 1")  to  KisGroupLayer(0x33c5320, name = "root")
krita(25754)/krita (core) KisPaintOpPreset::load: Load preset  "/home/boud/kde/sketch/share/apps/krita/defaultpresets/paintbrush.kpp"
krita(25754)/krita (core) KisPaintOpPreset::load: "2.2" "<Preset name="pixelbrush" paintopid="paintbrush"> <param name="CurveDarken"><![CDATA[0,0;1,1;]]></param> <param name="CurveMix"><![CDATA[0,0;1,1;]]></param> <param name="CurveOpacity"><![CDATA[0,0;1,1;]]></param> <param name="CurveRotation"><![CDATA[0,0;1,1;]]></param> <param name="CurveSize"><![CDATA[0,0;1,1;]]></param> <param name="CustomDarken">true</param> <param name="CustomMix">true</param> <param name="CustomOpacity">true</param> <param name="CustomRotation">true</param> <param name="CustomSize">true</param> <param name="DarkenSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="MixSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="OpacitySensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="PaintOpAction">2</param> <param name="PressureDarken">false</param> <param name="PressureMix">false</param> <param name="PressureOpacity">true</param> <param name="PressureRotation">false</param> <param name="PressureSize">true</param> <param name="RotationSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="SizeSensor"><![CDATA[<!DOCTYPE params> <params id="pressure"/> ]]></param> <param name="brush_definition"><![CDATA[<Brush type="auto_brush" spacing="0.1" angle="0"> <MaskGenerator radius="5" ratio="1" type="circle" vfade="0.5" spikes="2" hfade="0.5"/> </Brush> ]]></param> <param name="paintop"><![CDATA[paintbrush]]></param> </Preset>"
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveDarken"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveMix"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveOpacity"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveRotation"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CurveSize"  =  QVariant(QString, "0,0;1,1;")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomDarken"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomMix"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomRotation"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "CustomSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "DarkenSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "MixSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "OpacitySensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PaintOpAction"  =  QVariant(QString, "2")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureDarken"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureMix"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureOpacity"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureRotation"  =  QVariant(QString, "false")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "PressureSize"  =  QVariant(QString, "true")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "RotationSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "SizeSensor"  =  QVariant(QString, "<!DOCTYPE params> <params id="pressure"/> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "brush_definition"  =  QVariant(QString, "<Brush type="auto_brush" spacing="0.1" angle="0"> <MaskGenerator radius="5" ratio="1" type="circle" vfade="0.5" spikes="2" hfade="0.5"/> </Brush> ")
krita(25754)/krita (general) KisPropertiesConfiguration::dump: "paintop"  =  QVariant(QString, "paintbrush")
krita(25754)/krita (plugins) KisDynamicSensor::id2Sensor: Unknown transform parameter : ""
krita(25754)/krita (plugins) KisDynamicSensor::id2Sensor: Unknown transform parameter : ""
krita(25754)/krita (plugins) KisDynamicSensor::id2Sensor: Unknown transform parameter : ""
krita(25754)/krita (plugins) KisDynamicSensor::id2Sensor: Unknown transform parameter : ""
krita(25754)/krita (plugins) KisDynamicSensor::id2Sensor: Unknown transform parameter : ""
krita(25754)/krita (plugins) KisDynamicSensor::id2Sensor: Unknown transform parameter : ""
krita(25754)/krita (plugins) KisDynamicSensor::id2Sensor: Unknown transform parameter : ""
krita(25754)/krita (plugins) KisDynamicSensor::id2Sensor: Unknown transform parameter : ""
krita(25754)/krita (user interface) KisCanvasResourceProvider::setPaintOpPreset: setPaintOpPreset "pixelbrush" ("paintbrush" )
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ef) [0x7f1b3915f7ef]
7: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
10: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
12: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
15: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
16: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
18: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
19: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
20: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
21: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
22: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
23: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
24: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
25: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
26: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
28: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
29: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
30: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
31: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
32: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
34: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
35: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
36: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
37: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ef) [0x7f1b3915f7ef]
7: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
10: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
12: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
15: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
16: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
18: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
19: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
20: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
21: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
22: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
23: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
24: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
25: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
26: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
28: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
29: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
30: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
31: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
32: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
34: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
35: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
36: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
37: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ef) [0x7f1b3915f7ef]
7: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
10: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
12: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
15: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
16: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
18: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
19: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
20: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
21: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
22: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
23: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
24: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
25: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
26: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
28: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
29: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
30: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
31: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
32: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
34: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
35: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
36: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
37: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ef) [0x7f1b3915f7ef]
7: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
10: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
12: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
15: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
16: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
18: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
19: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
20: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
21: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
22: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
23: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
24: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
25: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
26: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
28: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
29: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
30: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
31: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
32: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
34: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
35: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
36: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
37: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ef) [0x7f1b3915f7ef]
7: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
10: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
12: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
15: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
16: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
18: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
19: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
20: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
21: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
22: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
23: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
24: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
25: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
26: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
28: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
29: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
30: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
31: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
32: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
34: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
35: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
36: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
37: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ef) [0x7f1b3915f7ef]
7: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
10: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
12: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
15: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
16: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
18: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
19: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
20: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
21: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
22: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
23: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
24: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
25: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
26: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
28: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
29: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
30: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
31: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
32: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
34: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
35: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
36: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
37: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ef) [0x7f1b3915f7ef]
7: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
10: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
12: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
15: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
16: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
18: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
19: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
20: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
21: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
22: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
23: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
24: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
25: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
26: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
28: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
29: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
30: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
31: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
32: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
34: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
35: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
36: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
37: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ef) [0x7f1b3915f7ef]
7: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
10: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
12: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
15: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
16: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
18: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
19: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
20: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
21: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
22: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
23: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
24: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
25: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
26: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
28: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
29: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
30: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
31: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
32: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
34: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
35: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
36: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
37: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ef) [0x7f1b3915f7ef]
7: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
10: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
12: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
15: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
16: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
18: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
19: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
20: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
21: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
22: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
23: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
24: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
25: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
26: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
28: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
29: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
30: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
31: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
32: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
34: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
35: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
36: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
37: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ef) [0x7f1b3915f7ef]
7: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
10: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
12: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
15: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
16: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
18: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
19: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
20: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
21: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
22: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
23: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
24: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
25: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
26: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
28: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
29: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
30: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
31: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
32: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
34: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
35: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
36: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
37: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ef) [0x7f1b3915f7ef]
7: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
10: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
12: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
15: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
16: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
18: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
19: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
20: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
21: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
22: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
23: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
24: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
25: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
26: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
28: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
29: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
30: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
31: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
32: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
34: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
35: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
36: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
37: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ef) [0x7f1b3915f7ef]
7: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
10: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
12: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
15: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
16: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
18: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
19: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
20: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
21: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
22: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
23: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
24: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
25: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
26: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
28: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
29: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
30: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
31: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
32: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
34: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
35: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
36: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
37: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
14: /usr/lib64/libQtCore.so.4(QAbstractItemModel::rowsInserted(QModelIndex const&, int, int)+0x44) [0x7f1b5d571254]
15: /usr/lib64/libQtCore.so.4(QAbstractItemModel::endInsertRows()+0xed) [0x7f1b5d50c41d]
16: /usr/lib64/libQtGui.so.4(+0x772320) [0x7f1b5e6fe320]
17: /usr/lib64/libQtGui.so.4(+0x7730e7) [0x7f1b5e6ff0e7]
18: /usr/lib64/libQtGui.so.4(QComboBox::insertItem(int, QIcon const&, QString const&, QVariant const&)+0x126) [0x7f1b5e53f2b6]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(SqueezedComboBox::insertSqueezedItem(QString const&, int)+0x10e) [0x7f1b4909505e]
20: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11b42) [0x7f1b3915eb42]
21: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
22: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
23: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
24: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
26: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
30: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
31: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
32: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
33: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
34: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
35: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
36: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
37: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
38: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
39: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
40: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
41: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
42: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
43: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
44: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
45: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
46: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
47: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
48: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
49: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
50: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
51: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
52: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
14: /usr/lib64/libQtCore.so.4(QAbstractItemModel::rowsInserted(QModelIndex const&, int, int)+0x44) [0x7f1b5d571254]
15: /usr/lib64/libQtCore.so.4(QAbstractItemModel::endInsertRows()+0xed) [0x7f1b5d50c41d]
16: /usr/lib64/libQtGui.so.4(+0x772320) [0x7f1b5e6fe320]
17: /usr/lib64/libQtGui.so.4(+0x7730e7) [0x7f1b5e6ff0e7]
18: /usr/lib64/libQtGui.so.4(QComboBox::insertItem(int, QIcon const&, QString const&, QVariant const&)+0x126) [0x7f1b5e53f2b6]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(SqueezedComboBox::insertSqueezedItem(QString const&, int)+0x10e) [0x7f1b4909505e]
20: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11b42) [0x7f1b3915eb42]
21: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
22: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
23: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
24: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
26: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
30: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
31: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
32: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
33: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
34: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
35: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
36: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
37: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
38: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
39: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
40: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
41: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
42: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
43: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
44: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
45: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
46: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
47: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
48: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
49: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
50: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
51: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
52: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
14: /usr/lib64/libQtCore.so.4(QAbstractItemModel::rowsInserted(QModelIndex const&, int, int)+0x44) [0x7f1b5d571254]
15: /usr/lib64/libQtCore.so.4(QAbstractItemModel::endInsertRows()+0xed) [0x7f1b5d50c41d]
16: /usr/lib64/libQtGui.so.4(+0x772320) [0x7f1b5e6fe320]
17: /usr/lib64/libQtGui.so.4(+0x7730e7) [0x7f1b5e6ff0e7]
18: /usr/lib64/libQtGui.so.4(QComboBox::insertItem(int, QIcon const&, QString const&, QVariant const&)+0x126) [0x7f1b5e53f2b6]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(SqueezedComboBox::insertSqueezedItem(QString const&, int)+0x10e) [0x7f1b4909505e]
20: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11b42) [0x7f1b3915eb42]
21: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
22: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
23: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
24: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
26: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
30: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
31: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
32: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
33: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
34: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
35: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
36: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
37: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
38: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
39: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
40: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
41: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
42: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
43: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
44: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
45: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
46: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
47: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
48: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
49: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
50: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
51: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
52: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
14: /usr/lib64/libQtCore.so.4(QAbstractItemModel::rowsInserted(QModelIndex const&, int, int)+0x44) [0x7f1b5d571254]
15: /usr/lib64/libQtCore.so.4(QAbstractItemModel::endInsertRows()+0xed) [0x7f1b5d50c41d]
16: /usr/lib64/libQtGui.so.4(+0x772320) [0x7f1b5e6fe320]
17: /usr/lib64/libQtGui.so.4(+0x7730e7) [0x7f1b5e6ff0e7]
18: /usr/lib64/libQtGui.so.4(QComboBox::insertItem(int, QIcon const&, QString const&, QVariant const&)+0x126) [0x7f1b5e53f2b6]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(SqueezedComboBox::insertSqueezedItem(QString const&, int)+0x10e) [0x7f1b4909505e]
20: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11b42) [0x7f1b3915eb42]
21: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
22: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
23: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
24: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
26: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
30: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
31: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
32: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
33: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
34: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
35: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
36: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
37: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
38: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
39: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
40: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
41: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
42: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
43: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
44: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
45: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
46: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
47: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
48: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
49: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
50: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
51: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
52: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
14: /usr/lib64/libQtCore.so.4(QAbstractItemModel::rowsInserted(QModelIndex const&, int, int)+0x44) [0x7f1b5d571254]
15: /usr/lib64/libQtCore.so.4(QAbstractItemModel::endInsertRows()+0xed) [0x7f1b5d50c41d]
16: /usr/lib64/libQtGui.so.4(+0x772320) [0x7f1b5e6fe320]
17: /usr/lib64/libQtGui.so.4(+0x7730e7) [0x7f1b5e6ff0e7]
18: /usr/lib64/libQtGui.so.4(QComboBox::insertItem(int, QIcon const&, QString const&, QVariant const&)+0x126) [0x7f1b5e53f2b6]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(SqueezedComboBox::insertSqueezedItem(QString const&, int)+0x10e) [0x7f1b4909505e]
20: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11b42) [0x7f1b3915eb42]
21: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
22: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
23: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
24: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
26: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
30: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
31: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
32: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
33: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
34: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
35: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
36: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
37: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
38: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
39: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
40: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
41: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
42: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
43: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
44: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
45: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
46: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
47: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
48: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
49: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
50: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
51: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
52: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
14: /usr/lib64/libQtCore.so.4(QAbstractItemModel::rowsInserted(QModelIndex const&, int, int)+0x44) [0x7f1b5d571254]
15: /usr/lib64/libQtCore.so.4(QAbstractItemModel::endInsertRows()+0xed) [0x7f1b5d50c41d]
16: /usr/lib64/libQtGui.so.4(+0x772320) [0x7f1b5e6fe320]
17: /usr/lib64/libQtGui.so.4(+0x7730e7) [0x7f1b5e6ff0e7]
18: /usr/lib64/libQtGui.so.4(QComboBox::insertItem(int, QIcon const&, QString const&, QVariant const&)+0x126) [0x7f1b5e53f2b6]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(SqueezedComboBox::insertSqueezedItem(QString const&, int)+0x10e) [0x7f1b4909505e]
20: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11b42) [0x7f1b3915eb42]
21: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
22: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
23: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
24: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
26: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
30: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
31: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
32: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
33: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
34: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
35: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
36: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
37: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
38: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
39: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
40: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
41: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
42: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
43: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
44: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
45: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
46: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
47: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
48: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
49: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
50: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
51: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
52: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
14: /usr/lib64/libQtCore.so.4(QAbstractItemModel::rowsInserted(QModelIndex const&, int, int)+0x44) [0x7f1b5d571254]
15: /usr/lib64/libQtCore.so.4(QAbstractItemModel::endInsertRows()+0xed) [0x7f1b5d50c41d]
16: /usr/lib64/libQtGui.so.4(+0x772320) [0x7f1b5e6fe320]
17: /usr/lib64/libQtGui.so.4(+0x7730e7) [0x7f1b5e6ff0e7]
18: /usr/lib64/libQtGui.so.4(QComboBox::insertItem(int, QIcon const&, QString const&, QVariant const&)+0x126) [0x7f1b5e53f2b6]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(SqueezedComboBox::insertSqueezedItem(QString const&, int)+0x10e) [0x7f1b4909505e]
20: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11b42) [0x7f1b3915eb42]
21: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
22: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
23: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
24: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
26: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
30: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
31: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
32: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
33: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
34: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
35: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
36: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
37: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
38: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
39: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
40: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
41: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
42: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
43: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
44: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
45: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
46: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
47: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
48: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
49: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
50: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
51: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
52: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
14: /usr/lib64/libQtCore.so.4(QAbstractItemModel::rowsInserted(QModelIndex const&, int, int)+0x44) [0x7f1b5d571254]
15: /usr/lib64/libQtCore.so.4(QAbstractItemModel::endInsertRows()+0xed) [0x7f1b5d50c41d]
16: /usr/lib64/libQtGui.so.4(+0x772320) [0x7f1b5e6fe320]
17: /usr/lib64/libQtGui.so.4(+0x7730e7) [0x7f1b5e6ff0e7]
18: /usr/lib64/libQtGui.so.4(QComboBox::insertItem(int, QIcon const&, QString const&, QVariant const&)+0x126) [0x7f1b5e53f2b6]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(SqueezedComboBox::insertSqueezedItem(QString const&, int)+0x10e) [0x7f1b4909505e]
20: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11b42) [0x7f1b3915eb42]
21: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
22: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
23: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
24: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
26: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
30: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
31: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
32: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
33: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
34: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
35: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
36: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
37: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
38: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
39: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
40: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
41: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
42: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
43: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
44: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
45: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
46: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
47: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
48: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
49: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
50: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
51: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
52: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
14: /usr/lib64/libQtCore.so.4(QAbstractItemModel::rowsInserted(QModelIndex const&, int, int)+0x44) [0x7f1b5d571254]
15: /usr/lib64/libQtCore.so.4(QAbstractItemModel::endInsertRows()+0xed) [0x7f1b5d50c41d]
16: /usr/lib64/libQtGui.so.4(+0x772320) [0x7f1b5e6fe320]
17: /usr/lib64/libQtGui.so.4(+0x7730e7) [0x7f1b5e6ff0e7]
18: /usr/lib64/libQtGui.so.4(QComboBox::insertItem(int, QIcon const&, QString const&, QVariant const&)+0x126) [0x7f1b5e53f2b6]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(SqueezedComboBox::insertSqueezedItem(QString const&, int)+0x10e) [0x7f1b4909505e]
20: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11b42) [0x7f1b3915eb42]
21: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
22: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
23: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
24: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
26: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
30: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
31: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
32: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
33: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
34: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
35: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
36: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
37: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
38: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
39: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
40: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
41: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
42: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
43: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
44: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
45: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
46: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
47: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
48: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
49: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
50: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
51: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
52: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
14: /usr/lib64/libQtCore.so.4(QAbstractItemModel::rowsInserted(QModelIndex const&, int, int)+0x44) [0x7f1b5d571254]
15: /usr/lib64/libQtCore.so.4(QAbstractItemModel::endInsertRows()+0xed) [0x7f1b5d50c41d]
16: /usr/lib64/libQtGui.so.4(+0x772320) [0x7f1b5e6fe320]
17: /usr/lib64/libQtGui.so.4(+0x7730e7) [0x7f1b5e6ff0e7]
18: /usr/lib64/libQtGui.so.4(QComboBox::insertItem(int, QIcon const&, QString const&, QVariant const&)+0x126) [0x7f1b5e53f2b6]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(SqueezedComboBox::insertSqueezedItem(QString const&, int)+0x10e) [0x7f1b4909505e]
20: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11b42) [0x7f1b3915eb42]
21: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
22: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
23: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
24: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
26: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
30: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
31: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
32: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
33: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
34: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
35: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
36: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
37: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
38: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
39: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
40: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
41: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
42: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
43: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
44: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
45: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
46: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
47: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
48: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
49: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
50: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
51: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
52: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
14: /usr/lib64/libQtCore.so.4(QAbstractItemModel::rowsInserted(QModelIndex const&, int, int)+0x44) [0x7f1b5d571254]
15: /usr/lib64/libQtCore.so.4(QAbstractItemModel::endInsertRows()+0xed) [0x7f1b5d50c41d]
16: /usr/lib64/libQtGui.so.4(+0x772320) [0x7f1b5e6fe320]
17: /usr/lib64/libQtGui.so.4(+0x7730e7) [0x7f1b5e6ff0e7]
18: /usr/lib64/libQtGui.so.4(QComboBox::insertItem(int, QIcon const&, QString const&, QVariant const&)+0x126) [0x7f1b5e53f2b6]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(SqueezedComboBox::insertSqueezedItem(QString const&, int)+0x10e) [0x7f1b4909505e]
20: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11b42) [0x7f1b3915eb42]
21: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
22: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
23: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
24: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
26: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
30: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
31: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
32: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
33: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
34: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
35: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
36: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
37: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
38: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
39: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
40: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
41: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
42: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
43: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
44: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
45: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
46: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
47: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
48: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
49: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
50: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
51: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
52: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
14: /usr/lib64/libQtCore.so.4(QAbstractItemModel::rowsInserted(QModelIndex const&, int, int)+0x44) [0x7f1b5d571254]
15: /usr/lib64/libQtCore.so.4(QAbstractItemModel::endInsertRows()+0xed) [0x7f1b5d50c41d]
16: /usr/lib64/libQtGui.so.4(+0x772320) [0x7f1b5e6fe320]
17: /usr/lib64/libQtGui.so.4(+0x7730e7) [0x7f1b5e6ff0e7]
18: /usr/lib64/libQtGui.so.4(QComboBox::insertItem(int, QIcon const&, QString const&, QVariant const&)+0x126) [0x7f1b5e53f2b6]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(SqueezedComboBox::insertSqueezedItem(QString const&, int)+0x10e) [0x7f1b4909505e]
20: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11b42) [0x7f1b3915eb42]
21: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
22: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
23: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
24: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
26: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
27: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
30: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
31: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
32: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
33: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
34: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
35: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
36: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
37: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
38: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
39: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
40: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
41: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
42: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
43: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
44: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
45: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
46: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
47: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
48: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
49: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
50: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
51: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
52: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11ed4) [0x7f1b3915eed4]
14: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
15: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
16: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
17: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
20: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
21: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
22: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
23: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
24: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
26: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
27: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
28: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
29: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
30: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
31: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
32: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
33: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
34: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
35: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
37: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
38: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
39: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
40: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
41: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
42: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
43: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
44: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
45: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11ed4) [0x7f1b3915eed4]
14: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
15: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
16: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
17: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
20: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
21: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
22: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
23: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
24: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
26: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
27: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
28: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
29: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
30: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
31: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
32: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
33: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
34: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
35: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
37: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
38: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
39: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
40: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
41: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
42: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
43: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
44: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
45: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11ed4) [0x7f1b3915eed4]
14: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
15: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
16: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
17: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
20: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
21: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
22: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
23: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
24: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
26: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
27: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
28: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
29: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
30: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
31: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
32: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
33: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
34: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
35: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
37: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
38: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
39: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
40: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
41: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
42: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
43: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
44: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
45: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11ed4) [0x7f1b3915eed4]
14: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
15: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
16: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
17: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
20: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
21: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
22: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
23: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
24: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
26: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
27: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
28: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
29: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
30: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
31: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
32: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
33: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
34: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
35: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
37: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
38: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
39: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
40: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
41: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
42: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
43: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
44: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
45: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11ed4) [0x7f1b3915eed4]
14: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
15: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
16: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
17: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
20: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
21: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
22: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
23: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
24: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
26: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
27: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
28: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
29: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
30: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
31: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
32: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
33: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
34: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
35: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
37: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
38: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
39: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
40: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
41: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
42: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
43: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
44: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
45: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11ed4) [0x7f1b3915eed4]
14: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
15: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
16: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
17: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
20: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
21: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
22: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
23: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
24: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
26: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
27: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
28: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
29: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
30: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
31: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
32: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
33: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
34: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
35: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
37: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
38: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
39: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
40: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
41: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
42: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
43: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
44: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
45: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11ed4) [0x7f1b3915eed4]
14: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
15: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
16: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
17: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
20: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
21: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
22: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
23: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
24: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
26: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
27: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
28: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
29: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
30: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
31: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
32: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
33: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
34: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
35: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
37: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
38: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
39: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
40: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
41: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
42: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
43: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
44: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
45: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11ed4) [0x7f1b3915eed4]
14: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
15: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
16: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
17: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
20: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
21: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
22: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
23: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
24: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
26: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
27: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
28: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
29: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
30: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
31: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
32: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
33: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
34: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
35: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
37: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
38: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
39: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
40: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
41: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
42: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
43: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
44: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
45: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11ed4) [0x7f1b3915eed4]
14: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
15: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
16: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
17: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
20: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
21: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
22: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
23: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
24: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
26: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
27: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
28: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
29: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
30: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
31: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
32: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
33: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
34: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
35: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
37: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
38: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
39: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
40: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
41: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
42: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
43: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
44: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
45: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11ed4) [0x7f1b3915eed4]
14: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
15: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
16: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
17: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
20: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
21: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
22: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
23: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
24: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
26: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
27: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
28: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
29: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
30: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
31: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
32: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
33: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
34: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
35: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
37: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
38: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
39: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
40: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
41: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
42: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
43: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
44: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
45: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11ed4) [0x7f1b3915eed4]
14: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
15: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
16: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
17: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
20: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
21: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
22: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
23: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
24: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
26: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
27: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
28: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
29: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
30: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
31: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
32: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
33: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
34: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
35: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
37: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
38: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
39: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
40: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
41: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
42: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
43: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
44: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
45: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x12ac4) [0x7f1b3915fac4]
8: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
9: /usr/lib64/libQtGui.so.4(QComboBox::currentIndexChanged(int)+0x31) [0x7f1b5e53c141]
10: /usr/lib64/libQtGui.so.4(+0x5b01a7) [0x7f1b5e53c1a7]
11: /usr/lib64/libQtGui.so.4(+0x5b03b0) [0x7f1b5e53c3b0]
12: /usr/lib64/libQtGui.so.4(QComboBox::setCurrentIndex(int)+0x56) [0x7f1b5e53c526]
13: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11ed4) [0x7f1b3915eed4]
14: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
15: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
16: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
17: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
20: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
21: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
22: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
23: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
24: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
25: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
26: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
27: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
28: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
29: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
30: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
31: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
32: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
33: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
34: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
35: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
37: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
38: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
39: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
40: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
41: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
42: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
43: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
44: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
45: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11edc) [0x7f1b3915eedc]
8: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
11: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
13: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
16: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
17: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
20: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
21: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
22: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
23: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
24: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
25: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
26: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
27: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
28: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
30: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
31: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
32: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
33: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
35: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
37: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
38: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
39: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11edc) [0x7f1b3915eedc]
8: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
11: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
13: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
16: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
17: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
20: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
21: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
22: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
23: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
24: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
25: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
26: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
27: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
28: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
30: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
31: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
32: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
33: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
35: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
37: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
38: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
39: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11edc) [0x7f1b3915eedc]
8: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
11: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
13: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
16: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
17: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
20: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
21: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
22: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
23: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
24: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
25: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
26: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
27: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
28: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
30: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
31: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
32: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
33: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
35: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
37: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
38: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
39: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11edc) [0x7f1b3915eedc]
8: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
11: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
13: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
16: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
17: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
20: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
21: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
22: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
23: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
24: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
25: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
26: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
27: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
28: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
30: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
31: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
32: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
33: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
35: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
37: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
38: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
39: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11edc) [0x7f1b3915eedc]
8: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
11: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
13: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
16: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
17: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
20: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
21: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
22: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
23: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
24: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
25: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
26: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
27: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
28: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
30: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
31: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
32: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
33: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
35: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
37: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
38: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
39: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11edc) [0x7f1b3915eedc]
8: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
11: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
13: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
16: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
17: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
20: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
21: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
22: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
23: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
24: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
25: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
26: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
27: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
28: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
30: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
31: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
32: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
33: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
35: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
37: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
38: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
39: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11edc) [0x7f1b3915eedc]
8: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
11: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
13: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
16: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
17: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
20: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
21: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
22: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
23: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
24: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
25: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
26: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
27: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
28: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
30: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
31: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
32: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
33: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
35: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
37: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
38: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
39: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11edc) [0x7f1b3915eedc]
8: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
11: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
13: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
16: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
17: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
20: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
21: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
22: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
23: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
24: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
25: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
26: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
27: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
28: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
30: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
31: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
32: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
33: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
35: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
37: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
38: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
39: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11edc) [0x7f1b3915eedc]
8: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
11: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
13: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
16: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
17: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
20: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
21: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
22: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
23: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
24: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
25: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
26: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
27: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
28: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
30: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
31: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
32: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
33: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
35: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
37: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
38: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
39: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11edc) [0x7f1b3915eedc]
8: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
11: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
13: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
16: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
17: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
20: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
21: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
22: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
23: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
24: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
25: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
26: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
27: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
28: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
30: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
31: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
32: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
33: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
35: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
37: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
38: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
39: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11edc) [0x7f1b3915eedc]
8: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
11: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
13: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
16: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
17: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
20: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
21: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
22: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
23: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
24: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
25: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
26: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
27: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
28: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
30: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
31: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
32: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
33: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
35: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
37: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
38: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
39: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x11edc) [0x7f1b3915eedc]
8: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127f7) [0x7f1b3915f7f7]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
11: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
13: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
16: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
17: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
19: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
20: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
21: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
22: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
23: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
24: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
25: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
26: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
27: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
28: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
29: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
30: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
31: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
32: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
33: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
35: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
36: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
37: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
38: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
39: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ff) [0x7f1b3915f7ff]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
16: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
19: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
20: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
21: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
22: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
23: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
24: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
25: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
26: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
27: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
29: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
30: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
31: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
32: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
35: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
36: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
37: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
38: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ff) [0x7f1b3915f7ff]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
16: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
19: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
20: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
21: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
22: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
23: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
24: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
25: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
26: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
27: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
29: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
30: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
31: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
32: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
35: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
36: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
37: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
38: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ff) [0x7f1b3915f7ff]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
16: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
19: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
20: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
21: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
22: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
23: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
24: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
25: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
26: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
27: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
29: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
30: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
31: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
32: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
35: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
36: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
37: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
38: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ff) [0x7f1b3915f7ff]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
16: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
19: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
20: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
21: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
22: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
23: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
24: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
25: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
26: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
27: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
29: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
30: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
31: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
32: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
35: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
36: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
37: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
38: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ff) [0x7f1b3915f7ff]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
16: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
19: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
20: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
21: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
22: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
23: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
24: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
25: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
26: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
27: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
29: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
30: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
31: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
32: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
35: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
36: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
37: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
38: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ff) [0x7f1b3915f7ff]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
16: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
19: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
20: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
21: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
22: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
23: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
24: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
25: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
26: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
27: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
29: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
30: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
31: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
32: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
35: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
36: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
37: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
38: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ff) [0x7f1b3915f7ff]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
16: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
19: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
20: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
21: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
22: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
23: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
24: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
25: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
26: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
27: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
29: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
30: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
31: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
32: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
35: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
36: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
37: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
38: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ff) [0x7f1b3915f7ff]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
16: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
19: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
20: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
21: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
22: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
23: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
24: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
25: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
26: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
27: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
29: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
30: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
31: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
32: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
35: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
36: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
37: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
38: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ff) [0x7f1b3915f7ff]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
16: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
19: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
20: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
21: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
22: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
23: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
24: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
25: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
26: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
27: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
29: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
30: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
31: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
32: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
35: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
36: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
37: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
38: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ff) [0x7f1b3915f7ff]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
16: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
19: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
20: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
21: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
22: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
23: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
24: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
25: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
26: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
27: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
29: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
30: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
31: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
32: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
35: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
36: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
37: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
38: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ff) [0x7f1b3915f7ff]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
16: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
19: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
20: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
21: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
22: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
23: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
24: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
25: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
26: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
27: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
29: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
30: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
31: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
32: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
35: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
36: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
37: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
38: krita() [0x400921]
]
"
krita(25754)/krita (render) KisPrescaledProjection::updateCache: Calling updateCache without an image:  "[
0: /usr/lib64/libkdecore.so.5(kRealBacktrace(int)+0x38) [0x7f1b5d96e948]
1: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPrescaledProjection::updateCache(QRect const&)+0x802) [0x7f1b48e16272]
2: /home/boud/kde/inst/lib64/libkritaui.so.11(KisQPainterCanvas::updateCache(QRect const&)+0x3b) [0x7f1b48e1987b]
3: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateCanvasProjection(QRect const&)+0x32) [0x7f1b48dfeef2]
4: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::startUpdateInPatches(QRect)+0xa4) [0x7f1b48dff434]
5: /home/boud/kde/inst/lib64/libkritaui.so.11(KisCanvas2::setDisplayFilter(KisDisplayFilter*)+0x287) [0x7f1b48e00837]
6: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0xfd86) [0x7f1b3915cd86]
7: /home/boud/kde/sketch/lib64/kde4/kritalutdocker.so(+0x127ff) [0x7f1b3915f7ff]
8: /home/boud/kde/inst/lib64/libflake.so.11(KoCanvasControllerWidget::Private::activate()+0x136) [0x7f1b61b3e966]
9: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::Private::attachCanvas(KoCanvasController*)+0x219) [0x7f1b61b56409]
10: /home/boud/kde/inst/lib64/libflake.so.11(KoToolManager::addController(KoCanvasController*)+0xaf) [0x7f1b61b566af]
11: /home/boud/kde/inst/lib64/libkritaui.so.11(KisView2::KisView2(KisPart2*, KisDoc2*, QWidget*)+0x42d) [0x7f1b48f90e9d]
12: /home/boud/kde/inst/lib64/libkritaui.so.11(KisPart2::createViewInstance(QWidget*)+0x4a) [0x7f1b48ed681a]
13: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::createView(QWidget*)+0x1a) [0x7f1b62da470a]
14: /home/boud/kde/inst/lib64/libkomain.so.11(KoMainWindow::setRootDocument(KoDocument*, KoPart*)+0x35d) [0x7f1b62d201bd]
15: /home/boud/kde/inst/lib64/libkomain.so.11(KoPart::deleteOpenPane(bool)+0xaa) [0x7f1b62da593a]
16: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
17: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3be80f) [0x7f1b4905c80f]
18: /home/boud/kde/inst/lib64/libkritaui.so.11(+0x3c1380) [0x7f1b4905f380]
19: /usr/lib64/libQtCore.so.4(QMetaObject::activate(QObject*, QMetaObject const*, int, void**)+0x2bf) [0x7f1b5d52839f]
20: /usr/lib64/libQtGui.so.4(QAbstractButton::clicked(bool)+0x32) [0x7f1b5e7cea82]
21: /usr/lib64/libQtGui.so.4(+0x59782e) [0x7f1b5e52382e]
22: /usr/lib64/libQtGui.so.4(+0x598060) [0x7f1b5e524060]
23: /usr/lib64/libQtGui.so.4(QAbstractButton::timerEvent(QTimerEvent*)+0x54) [0x7f1b5e524134]
24: /usr/lib64/libQtCore.so.4(QObject::event(QEvent*)+0x9c) [0x7f1b5d52631c]
25: /usr/lib64/libQtGui.so.4(QWidget::event(QEvent*)+0x6a) [0x7f1b5e1b975a]
26: /usr/lib64/libQtGui.so.4(QApplicationPrivate::notify_helper(QObject*, QEvent*)+0xac) [0x7f1b5e16a74c]
27: /usr/lib64/libQtGui.so.4(QApplication::notify(QObject*, QEvent*)+0x13a) [0x7f1b5e16ebca]
28: /home/boud/kde/inst/lib64/libkomain.so.11(KoApplication::notify(QObject*, QEvent*)+0x28) [0x7f1b62ce0738]
29: /usr/lib64/libQtCore.so.4(QCoreApplication::notifyInternal(QObject*, QEvent*)+0x8e) [0x7f1b5d511b0e]
30: /usr/lib64/libQtCore.so.4(+0x1ae561) [0x7f1b5d542561]
31: /usr/lib64/libQtCore.so.4(QEventDispatcherUNIX::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x158) [0x7f1b5d542cf8]
32: /usr/lib64/libQtGui.so.4(+0x27f87f) [0x7f1b5e20b87f]
33: /usr/lib64/libQtCore.so.4(QEventLoop::processEvents(QFlags<QEventLoop::ProcessEventsFlag>)+0x2f) [0x7f1b5d51085f]
34: /usr/lib64/libQtCore.so.4(QEventLoop::exec(QFlags<QEventLoop::ProcessEventsFlag>)+0x138) [0x7f1b5d510ae8]
35: /usr/lib64/libQtCore.so.4(QCoreApplication::exec()+0x88) [0x7f1b5d515788]
36: /home/boud/kde/inst/lib64/libkdeinit4_krita.so(kdemain+0x222) [0x7f1b6325e752]
37: /lib64/libc.so.6(__libc_start_main+0xf5) [0x7f1b5c363455]
38: krita() [0x400921]
]
"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "metadataeditor"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "Histogram Plugin"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "Compose Layer plugin"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "Shear Image Plugin"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "Separate Channels Plugin"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "Share Images"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "Colorspace Conversion"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "Colorrange"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "Image Splitter"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "Modify Selection"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "Rotate Image Plugin"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "Image Resize and Scale Plugin"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "Dropshadow"
krita(25754)/krita (user interface) KisView2::loadPlugins: Load plugin  "bigbrother"
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 262x106)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 262x106)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.32 info->scaleY = 0.32
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 512x512)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 83x33)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 262x106)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 83.84x33.92)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 262x106)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 268x112)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.32 info->scaleY = 0.32
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(512,0 512x512)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 0.64x0.64)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 2x2)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 8x8)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.32 info->scaleY = 0.32
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(1024,0 512x512)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 0.64x0.64)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 2x2)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 8x8)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.32 info->scaleY = 0.32
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(1536,0 384x512)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 0.64x0.64)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 2x2)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 8x8)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.32 info->scaleY = 0.32
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,512 512x512)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 0.64x0.64)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 2x2)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 8x8)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.32 info->scaleY = 0.32
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(512,512 512x512)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 0.64x0.64)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 2x2)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 8x8)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.32 info->scaleY = 0.32
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(1024,512 512x512)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 0.64x0.64)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 2x2)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 8x8)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.32 info->scaleY = 0.32
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(1536,512 384x512)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 0.64x0.64)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 2x2)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 8x8)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.32 info->scaleY = 0.32
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,1024 512x176)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 0.64x0.64)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 2x2)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 8x8)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.32 info->scaleY = 0.32
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(512,1024 512x176)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 0.64x0.64)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 2x2)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 8x8)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.32 info->scaleY = 0.32
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(1024,1024 512x176)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 0.64x0.64)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 2x2)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 8x8)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.32 info->scaleY = 0.32
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(1536,1024 384x176)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 2x2)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 0.64x0.64)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.32 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 2x2)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 8x8)
krita(25754)/krita (plugins) KisSpecificColorSelectorWidget::setColorSpace: "RGBA"   "sRGB built-in"
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 1 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(87,0 85x34)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(87,0 85x34)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: smoothBetween100And200Percent
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 1 info->scaleY = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 1 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 0
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 83x33)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(87,0 85x34)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(-1,0 85x34)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 1 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(2,2 85x34)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(85,-2 89x38)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 1 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(87,34 85x35)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(87,34 85x35)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: smoothBetween100And200Percent
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 1 info->scaleY = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 1 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 0
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 83x33)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(87,34 85x35)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(-1,-1 85x35)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 1 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(2,2 85x35)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(85,32 89x39)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 1 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(87,34 85x35)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(87,34 85x35)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: smoothBetween100And200Percent
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 1 info->scaleY = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 1 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 0
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 83x33)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(87,34 85x35)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(-1,-1 85x35)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 1 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(2,2 85x35)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(85,32 89x39)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 1 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(87,34 85x35)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(87,34 85x35)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: smoothBetween100And200Percent
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 1 info->scaleY = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 1 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 0
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 83x33)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(87,34 85x35)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(-1,-1 85x35)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 1 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(2,2 85x35)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(85,32 89x39)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(178,69 338x447)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(178,69 338x447)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 162x215)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(178,69 338x447)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(-1.31771,-1.39844 164.599x217.68)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 338x447)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(175,66 344x453)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,69 518x447)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,69 518x447)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(161,0 250x215)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,69 518x447)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(159.872,-1.39844 252.255x217.68)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x447)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,66 524x453)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,69 518x447)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,69 518x447)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(410,0 250x215)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,69 518x447)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(408.719,-1.39844 252.255x217.68)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x447)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,66 524x453)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1534,69 386x447)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1534,69 386x447)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(660,0 250x215)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1534,69 386x447)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(659.026,-1.39844 187.974x217.68)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 386x447)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1531,66 392x453)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 0x0)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(909,0 26x215)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(-88,-35 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(178,509 338x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(178,509 338x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,214 162x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(178,509 338x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(-1.31771,212.872 164.599x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 338x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(175,506 344x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,509 518x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(161,214 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(159.872,212.872 252.255x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,506 524x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,509 518x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(410,214 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(408.719,212.872 252.255x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,506 524x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1534,509 386x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1534,509 386x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(660,214 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1534,509 386x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(659.026,212.872 187.974x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 386x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1531,506 392x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 0x0)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(909,214 26x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(-88,-35 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(178,1020 338x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(178,1020 338x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,463 162x122)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(178,1020 338x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(-1.31771,461.719 164.599x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 338x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(175,1017 344x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,1020 518x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(161,463 250x122)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(159.872,461.719 252.255x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,1017 524x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,1020 518x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(410,463 250x122)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(408.719,461.719 252.255x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,1017 524x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1534,1020 386x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1534,1020 386x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(660,463 250x122)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1534,1020 386x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(659.026,461.719 187.974x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 386x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1531,1017 392x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 0x0)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(909,463 26x122)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(-88,-35 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,69 185x447)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,69 185x447)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 89x215)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,69 185x447)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,-1.39844 90.0911x217.68)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 185x447)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,66 191x453)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,509 185x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,509 185x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,214 89x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,509 185x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,212.872 90.0911x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 185x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,506 191x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,1020 185x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,1020 185x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,463 89x122)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,1020 185x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,461.719 90.0911x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 185x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,1017 191x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 516x76)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 516x76)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 250x36)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 516x76)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 251.281x37.0104)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 516x76)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 522x82)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,0 518x76)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,0 518x76)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(249,0 250x36)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,0 518x76)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(247.872,0 252.255x37.0104)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x76)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,-3 524x82)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,0 518x76)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,0 518x76)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(498,0 250x36)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,0 518x76)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(496.719,0 252.255x37.0104)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x76)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,-3 524x82)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1533,0 387x76)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1533,0 387x76)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(748,0 187x36)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1533,0 387x76)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(746.539,0 188.461x37.0104)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 387x76)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1530,-3 393x82)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 516x516)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 516x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 516x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 251.281x251.281)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 516x516)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 522x522)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,0 518x516)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,0 518x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(249,0 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,0 518x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(247.872,0 252.255x251.281)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x516)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,-3 524x522)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,0 518x516)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,0 518x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(498,0 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,0 518x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(496.719,0 252.255x251.281)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x516)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,-3 524x522)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1533,0 387x516)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1533,0 387x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(748,0 187x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1533,0 387x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(746.539,0 188.461x251.281)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 387x516)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1530,-3 393x522)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,509 516x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,509 516x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,249 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,509 516x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,247.872 251.281x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 516x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,506 522x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,509 518x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(249,249 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(247.872,247.872 252.255x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,506 524x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,509 518x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(498,249 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(496.719,247.872 252.255x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,506 524x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1533,509 387x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1533,509 387x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(748,249 187x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1533,509 387x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(746.539,247.872 188.461x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 387x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1530,506 393x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,1020 516x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,1020 516x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,498 250x87)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,1020 516x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,496.719 251.281x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 516x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,1017 522x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,1020 518x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(249,498 250x87)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(247.872,496.719 252.255x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,1017 524x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,1020 518x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(498,498 250x87)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(496.719,496.719 252.255x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,1017 524x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1533,1020 387x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1533,1020 387x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(748,498 187x87)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1533,1020 387x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(746.539,496.719 188.461x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 387x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1530,1017 393x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 516x516)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 516x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 516x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 251.281x251.281)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 516x516)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 522x522)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,0 518x516)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,0 518x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(249,0 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,0 518x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(247.872,0 252.255x251.281)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x516)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,-3 524x522)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,0 518x516)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,0 518x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(498,0 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,0 518x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(496.719,0 252.255x251.281)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x516)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,-3 524x522)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1533,0 387x516)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1533,0 387x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(748,0 187x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1533,0 387x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(746.539,0 188.461x251.281)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 387x516)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1530,-3 393x522)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,509 516x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,509 516x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,249 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,509 516x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,247.872 251.281x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 516x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,506 522x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,509 518x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(249,249 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(247.872,247.872 252.255x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,506 524x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,509 518x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(498,249 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(496.719,247.872 252.255x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,506 524x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1533,509 387x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1533,509 387x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(748,249 187x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1533,509 387x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(746.539,247.872 188.461x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 387x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1530,506 393x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,1020 516x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,1020 516x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,498 250x87)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,1020 516x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,496.719 251.281x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 516x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,1017 522x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,1020 518x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(249,498 250x87)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(247.872,496.719 252.255x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,1017 524x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,1020 518x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(498,498 250x87)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(496.719,496.719 252.255x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,1017 524x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1533,1020 387x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1533,1020 387x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(748,498 187x87)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1533,1020 387x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(746.539,496.719 188.461x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 387x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1530,1017 393x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 516x516)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 516x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 516x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 251.281x251.281)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 516x516)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 522x522)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,0 518x516)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,0 518x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(249,0 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,0 518x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(247.872,0 252.255x251.281)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x516)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,-3 524x522)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,0 518x516)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,0 518x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(498,0 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,0 518x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(496.719,0 252.255x251.281)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x516)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,-3 524x522)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1533,0 387x516)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1533,0 387x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(748,0 187x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1533,0 387x516)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(746.539,0 188.461x251.281)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 387x516)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1530,-3 393x522)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,509 516x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,509 516x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,249 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,509 516x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,247.872 251.281x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 516x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,506 522x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,509 518x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(249,249 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(247.872,247.872 252.255x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,506 524x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,509 518x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(498,249 250x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,509 518x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(496.719,247.872 252.255x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,506 524x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1533,509 387x518)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1533,509 387x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(748,249 187x250)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1533,509 387x518)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(746.539,247.872 188.461x252.255)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 387x518)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1530,506 393x524)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,1020 516x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,1020 516x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,498 250x87)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,1020 516x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,496.719 251.281x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 516x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,1017 522x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,1020 518x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(249,498 250x87)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(247.872,496.719 252.255x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,1017 524x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,1020 518x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(498,498 250x87)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,1020 518x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(496.719,496.719 252.255x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 518x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,1017 524x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1533,1020 387x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1533,1020 387x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.486979 info->scaleY = 0.486979
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(748,498 187x87)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1533,1020 387x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(746.539,496.719 188.461x87.6562)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.486979 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 387x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1530,1017 393x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 517x517)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 517x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 156x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 517x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 156.716x156.716)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 517x517)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 523x523)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,0 519x517)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,0 519x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(155,0 156x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,0 519x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(154.291,0 157.322x156.716)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 519x517)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,-3 525x523)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,0 520x517)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,0 520x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(310,0 156x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,0 520x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(309.188,0 157.625x156.716)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 520x517)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,-3 526x523)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1532,0 388x517)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1532,0 388x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(465,0 117x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1532,0 388x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(464.387,0 117.612x156.716)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 388x517)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1529,-3 394x523)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,509 517x519)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,509 517x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,155 156x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,509 517x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,154.291 156.716x157.322)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 517x519)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,506 523x525)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,509 519x519)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,509 519x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(155,155 156x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,509 519x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(154.291,154.291 157.322x157.322)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 519x519)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,506 525x525)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,509 520x519)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,509 520x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(310,155 156x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,509 520x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(309.188,154.291 157.625x157.322)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 520x519)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,506 526x525)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1532,509 388x519)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1532,509 388x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(465,155 117x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1532,509 388x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(464.387,154.291 117.612x157.322)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 388x519)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1529,506 394x525)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,1020 517x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,1020 517x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,310 156x54)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,1020 517x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,309.188 156.716x54.5625)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 517x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,1017 523x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,1020 519x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,1020 519x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(155,310 156x54)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,1020 519x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(154.291,309.188 157.322x54.5625)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 519x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,1017 525x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,1020 520x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,1020 520x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(310,310 156x54)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,1020 520x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(309.188,309.188 157.625x54.5625)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 520x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,1017 526x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1532,1020 388x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1532,1020 388x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(465,310 117x54)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1532,1020 388x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(464.387,309.188 117.612x54.5625)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 388x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1529,1017 394x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,0 517x517)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,0 517x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,0 156x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,0 517x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,0 156.716x156.716)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 517x517)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,-3 523x523)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,0 519x517)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,0 519x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(155,0 156x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,0 519x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(154.291,0 157.322x156.716)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 519x517)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,-3 525x523)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,0 520x517)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,0 520x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(310,0 156x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,0 520x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(309.188,0 157.625x156.716)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 520x517)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,-3 526x523)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1532,0 388x517)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1532,0 388x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(465,0 117x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1532,0 388x517)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(464.387,0 117.612x156.716)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 388x517)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1529,-3 394x523)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,509 517x519)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,509 517x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,155 156x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,509 517x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,154.291 156.716x157.322)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 517x519)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,506 523x525)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,509 519x519)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,509 519x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(155,155 156x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,509 519x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(154.291,154.291 157.322x157.322)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 519x519)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,506 525x525)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,509 520x519)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,509 520x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(310,155 156x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,509 520x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(309.188,154.291 157.625x157.322)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 520x519)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,506 526x525)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1532,509 388x519)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1532,509 388x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(465,155 117x156)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1532,509 388x519)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(464.387,154.291 117.612x157.322)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 388x519)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1529,506 394x525)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(0,1020 517x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(0,1020 517x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(0,310 156x54)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(0,1020 517x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(0,309.188 156.716x54.5625)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 517x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(-3,1017 523x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(509,1020 519x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(509,1020 519x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(155,310 156x54)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(509,1020 519x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(154.291,309.188 157.322x54.5625)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 519x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(506,1017 525x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1020,1020 520x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1020,1020 520x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(310,310 156x54)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1020,1020 520x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(309.188,309.188 157.625x54.5625)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 520x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1017,1017 526x186)
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: Before alignment:	 QRect(1532,1020 388x180)
krita(25754)/krita (render) KisImagePyramid::alignSourceRect: After alignment:	 QRect(1532,1020 388x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->scaleX = 0.303125 info->scaleY = 0.303125
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->borderWidth = 2 info->renderHints = QFlags(0x4)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->transfer = 1
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: info->dirtyImageRect = QRect(0,0 0x0)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Not aligned rect of the canvas (raw):	 QRect(465,310 117x54)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in KisImage's pixels:	 QRect(1532,1020 388x180)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: Update rect in canvas' pixels:	 QRectF(464.387,309.188 117.612x54.5625)
krita(25754)/krita (render) KisPrescaledProjection::fillInUpdateInformation: #####################################
krita(25754)/krita (render) KisImagePyramid::findFirstGoodPlaneIndex: First good plane: 0 (sc: 0.303125 )
krita(25754)/krita (render) KisImagePatch::KisImagePatch: A new patch has been created:
krita(25754)/krita (render) KisImagePatch::KisImagePatch: scaleX = 1 scaleY = 1
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_interestRect = QRectF(3,3 388x180)
krita(25754)/krita (render) KisImagePatch::KisImagePatch: m_patchRect = QRect(1529,1017 394x186)
krita(25754)/krita (core) KisImage::~KisImage: deleting kisimage "unnamed"
krita(25754)/krita (registry) KisClipboard::~KisClipboard: deleting KisClipBoard
krita(25754)/krita (registry) KisFilterRegistry::~KisFilterRegistry: deleting KisFilterRegistry
krita(25754)/krita (registry) KisGeneratorRegistry::~KisGeneratorRegistry: deleting KisGeneratorRegistry
krita(25754)/krita (registry) KisBrushRegistry::~KisBrushRegistry: deleting KisBrushRegistry
krita(25754)/krita (registry) KisConfigNotifier::~KisConfigNotifier: deleting KisConfigNotifier
krita(25754)/krita (registry) KisResourceServerProvider::~KisResourceServerProvider: deleting KisResourceServerProvider
krita(25754)/krita (registry) KisPaintingAssistantFactoryRegistry::~KisPaintingAssistantFactoryRegistry: deleting KisPaintingAssistantFactoryRegistry
krita(25754)/krita (registry) KisBrushServer::~KisBrushServer: deleting KisBrushServer
krita(25754)/krita (registry) KisPaintOpRegistry::~KisPaintOpRegistry: Deleting KisPaintOpRegistry

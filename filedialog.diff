diff --git a/krita/gemini/desktopviewproxy.cpp b/krita/gemini/desktopviewproxy.cpp
index 7e56bbc..489a440 100644
--- a/krita/gemini/desktopviewproxy.cpp
+++ b/krita/gemini/desktopviewproxy.cpp
@@ -22,23 +22,24 @@
 
 #include "desktopviewproxy.h"
 
-#include "MainWindow.h"
-#include <sketch/DocumentManager.h>
-
-#include <KoMainWindow.h>
-#include <KoFilterManager.h>
-#include <KoDocumentEntry.h>
-
-#include <kactioncollection.h>
-
 #include <QProcess>
 #include <QDir>
 #include <QApplication>
-#include <KFileDialog>
-#include <KLocalizedString>
+#include <QDesktopServices>
+
+#include <klocalizedstring.h>
 #include <krecentfilesaction.h>
+#include <kactioncollection.h>
+
 #include <boost/config/posix_features.hpp>
 
+#include <KoMainWindow.h>
+#include <KoFilterManager.h>
+#include <KoFileDialogHelper.h>
+#include <KoDocumentEntry.h>
+
+#include "MainWindow.h"
+#include <sketch/DocumentManager.h>
 #include <kis_doc2.h>
 
 class DesktopViewProxy::Private
@@ -104,35 +105,22 @@ void DesktopViewProxy::fileNew()
 
 void DesktopViewProxy::fileOpen()
 {
-#ifdef Q_WS_WIN
-    // "kfiledialog:///OpenDialog" forces KDE style open dialog in Windows
-    // TODO provide support for "last visited" directory
-    KFileDialog *dialog = new KFileDialog(KUrl(""), QString(), d->desktopView);
-#else
-    KFileDialog *dialog = new KFileDialog(KUrl("kfiledialog:///OpenDialog"), QString(), d->desktopView);
-#endif
-    dialog->setObjectName("file dialog");
-    dialog->setMode(KFile::File);
-    dialog->setCaption(i18n("Open Document"));
-
     KoDocumentEntry entry = KoDocumentEntry::queryByMimeType(KIS_MIME_TYPE);
     KService::Ptr service = entry.service();
     const QStringList mimeFilter = KoFilterManager::mimeFilter(KIS_MIME_TYPE,
                                                                KoFilterManager::Import,
                                                                service->property("X-KDE-ExtraNativeMimeTypes").toStringList());
 
-    dialog->setMimeFilter(mimeFilter);
-    if (dialog->exec() != QDialog::Accepted) {
-        delete dialog;
-        return;
-    }
-    KUrl url(dialog->selectedUrl());
-    delete dialog;
 
-    if (url.isEmpty())
-        return;
+    QString filename = KoFileDialogHelper::getOpenFileName(d->desktopView,
+                                                           i18n("Open Document"),
+                                                           QDesktopServices::storageLocation(QDesktopServices::PicturesLocation),
+                                                           mimeFilter,
+                                                           "",
+                                                           "OpenDocument");
+    if (filename.isEmpty()) return;
 
-    DocumentManager::instance()->openDocument(url.toLocalFile(), d->isImporting);
+    DocumentManager::instance()->openDocument(filename, d->isImporting);
 }
 
 void DesktopViewProxy::fileSave()
diff --git a/krita/plugins/assistants/RulerAssistant/kis_ruler_assistant_tool.cc b/krita/plugins/assistants/RulerAssistant/kis_ruler_assistant_tool.cc
index 37e565e..f890e72 100644
--- a/krita/plugins/assistants/RulerAssistant/kis_ruler_assistant_tool.cc
+++ b/krita/plugins/assistants/RulerAssistant/kis_ruler_assistant_tool.cc
@@ -21,10 +21,10 @@
 #include <QPainter>
 #include <QXmlStreamReader>
 #include <QXmlStreamWriter>
+#include <QDesktopServices>
 
 #include <kis_debug.h>
 #include <klocale.h>
-#include <kfiledialog.h>
 #include <kmessagebox.h>
 #include <kio/job.h>
 #include <kio/netaccess.h>
@@ -34,7 +34,7 @@
 #endif
 
 #include <KoIcon.h>
-
+#include <KoFileDialogHelper.h>
 #include <KoViewConverter.h>
 #include <KoPointerEvent.h>
 
@@ -489,7 +489,13 @@ void KisRulerAssistantTool::saveAssistants()
     xml.writeEndElement();
     xml.writeEndDocument();
 
-    KUrl file = KFileDialog::getSaveUrl(KUrl(), QString("*.krassistants"));
+    QString filename = KoFileDialogHelper::getSaveFileName(m_canvas->view(),
+                                                           i18n("Save Assistant"),
+                                                           QDesktopServices::storageLocation(QDesktopServices::PicturesLocation),
+                                                           QStringList("*.krassistants"),
+                                                           "",
+                                                           "OpenDocument");
+    KUrl file = KUrl::fromLocalFile(filename);
     if (file.isEmpty()) return;
     KIO::StoredTransferJob* job = KIO::storedPut(data, file, -1);
     connect(job, SIGNAL(result(KJob*)), SLOT(saveFinish(KJob*)));
diff --git a/krita/plugins/extensions/dockers/flipbook/flipbookdocker_dock.cpp b/krita/plugins/extensions/dockers/flipbook/flipbookdocker_dock.cpp
index a9a3505..6abb42e 100644
--- a/krita/plugins/extensions/dockers/flipbook/flipbookdocker_dock.cpp
+++ b/krita/plugins/extensions/dockers/flipbook/flipbookdocker_dock.cpp
@@ -28,6 +28,7 @@
 #include <kactioncollection.h>
 #include <kurl.h>
 
+#include <KoFileDialogHelper.h>
 #include <KoIcon.h>
 #include <KoCanvasBase.h>
 #include <KoZoomController.h>
@@ -157,8 +158,12 @@ void FlipbookDockerDock::updateLayout(Qt::DockWidgetArea area)
 
 void FlipbookDockerDock::saveFlipbook()
 {
-    QString filename = KFileDialog::getSaveFileName(KUrl("kfiledialog:///OpenDialog"),
-                                                    "*.flipbook", this, i18n("Save flipbook"));
+    QString filename = KoFileDialogHelper::getSaveFileName(this,
+                                                           i18n("Save flipbook"),
+                                                           QDesktopServices::storageLocation(QDesktopServices::PicturesLocation),
+                                                           QStringList("*.flipbook"),
+                                                           "",
+                                                           "OpenDocument");
     if (!filename.isEmpty()) {
         m_flipbook->setName(txtName->text());
         m_flipbook->save(filename);
diff --git a/krita/plugins/extensions/dockers/lut/lutdocker_dock.cpp b/krita/plugins/extensions/dockers/lut/lutdocker_dock.cpp
index b6c2c8d..e4fc457 100644
--- a/krita/plugins/extensions/dockers/lut/lutdocker_dock.cpp
+++ b/krita/plugins/extensions/dockers/lut/lutdocker_dock.cpp
@@ -32,6 +32,7 @@
 #include <klocale.h>
 #include <kcombobox.h>
 
+#include <KoFileDialogHelper.h>
 #include <KoChannelInfo.h>
 #include <KoColorSpace.h>
 #include <KoColorSpaceFactory.h>
@@ -271,7 +272,10 @@ void LutDockerDock::selectOcioConfiguration()
     //qDebug() << "selectOcioConfiguration";
     QString filename = m_txtConfigurationPath->text();
 
-    filename = KFileDialog::getOpenFileName(QDir::cleanPath(filename), "*.ocio|OpenColorIO configuration (*.ocio)", this);
+    filename = KoFileDialogHelper::getOpenFileName(this,
+                                                   i18n("Select OpenColorIO Configuration"),
+                                                   QDir::cleanPath(filename),
+                                                   QStringList("*.ocio"));
     QFile f(filename);
     if (f.exists()) {
         m_txtConfigurationPath->setText(filename);
diff --git a/krita/plugins/extensions/imagesplit/imagesplit.cpp b/krita/plugins/extensions/imagesplit/imagesplit.cpp
index e618082..1928893 100644
--- a/krita/plugins/extensions/imagesplit/imagesplit.cpp
+++ b/krita/plugins/extensions/imagesplit/imagesplit.cpp
@@ -21,25 +21,28 @@
 
 #include "imagesplit.h"
 
+#include <QStringList>
+#include <QDir>
+#include <QDesktopServices>
+
 #include <klocale.h>
-#include <kis_debug.h>
 #include <kpluginfactory.h>
+#include <kmimetype.h>
+
+#include <KoFilterManager.h>
+#include <KoFileDialogHelper.h>
+#include <KoDocument.h>
+
+#include <kis_debug.h>
 #include <kis_types.h>
 #include <kis_view2.h>
 #include <kis_image.h>
 #include <kis_action.h>
-
 #include <kis_doc2.h>
-#include <KoDocument.h>
-#include <kmimetype.h>
-#include <QStringList>
-#include <KoFilterManager.h>
-#include <kfiledialog.h>
 #include <kis_paint_layer.h>
 #include <kis_painter.h>
-#include <QDir>
-
 #include <kis_paint_device.h>
+
 #include "dlg_imagesplit.h"
 
 K_PLUGIN_FACTORY(ImagesplitFactory, registerPlugin<Imagesplit>();)
@@ -126,21 +129,20 @@ void Imagesplit::slotImagesplit()
             for(int i=0;i<(numVerticalLines+1);i++) {
               for(int j=0;j<(numHorizontalLines+1);j++)
               {
-                    QString mimelist = listMimeFilter.join(" ");
-                    KFileDialog fd(KUrl(QString()), mimelist, m_view);
-                    fd.setObjectName("Save Image on Split");
-                    fd.setCaption(i18n("Save Image on Split"));
-                    fd.setMimeFilter(listMimeFilter, listMimeFilter.at(0));
-                    fd.setOperationMode(KFileDialog::Saving);
+                    QString filename = KoFileDialogHelper::getSaveFileName(m_view,
+                                                                           i18n("Save Image on Split"),
+                                                                           QDesktopServices::storageLocation(QDesktopServices::PicturesLocation),
+                                                                           listMimeFilter,
+                                                                           "",
+                                                                           "OpenDocument");
 
-                    if (!fd.exec()) return;
+                    KUrl url = KUrl::fromLocalFile(filename);
 
-                    KUrl url = fd.selectedUrl();
-                    QString mimefilter = fd.currentMimeFilter();
+                    KMimeType::Ptr mime = KMimeType::findByUrl(url);
+                    QString mimefilter = mime->name();
 
                     if (url.isEmpty())
                         return;
-
                     saveAsImage(QRect((i*img_width),(j*img_height),img_width,img_height),mimefilter,url);
                 }
             }
diff --git a/krita/plugins/extensions/separate_channels/kis_channel_separator.cc b/krita/plugins/extensions/separate_channels/kis_channel_separator.cc
index dbe04ae..d6d1769 100644
--- a/krita/plugins/extensions/separate_channels/kis_channel_separator.cc
+++ b/krita/plugins/extensions/separate_channels/kis_channel_separator.cc
@@ -22,22 +22,24 @@
  */
 
 #include "kis_channel_separator.h"
-#include <limits.h>
 
+#include <limits.h>
 #include <stdlib.h>
 #include <vector>
 
+#include <QDesktopServices>
+
 #include <klocale.h>
 #include <kmessagebox.h>
 #include <kstandarddirs.h>
 #include <kis_debug.h>
 #include <kpluginfactory.h>
 #include <knuminput.h>
-#include <kfiledialog.h>
 
 #include <KoFilterManager.h>
 #include <KoProgressUpdater.h>
 #include <KoUpdater.h>
+#include <KoFileDialogHelper.h>
 
 #include <kis_doc2.h>
 #include <kis_image.h>
@@ -233,27 +235,25 @@ void KisChannelSeparator::separate(KoUpdater * progressUpdater, enumSepAlphaOpti
             if (outputOps == TO_LAYERS) {
                 KisPaintLayerSP l = KisPaintLayerSP(new KisPaintLayer(image.data(), ch->name(), OPACITY_OPAQUE_U8, *deviceIt));
                 adapter.addNode(l.data(), image->rootLayer(), 0);
-            } else {
-                QStringList listMimeFilter = KoFilterManager::mimeFilter("application/x-krita", KoFilterManager::Export);
-                QString mimelist = listMimeFilter.join(" ");
+            }
+            else {
 
-                KFileDialog fd(QString(), mimelist, m_view);
-                fd.setObjectName("Export Layer");
-                fd.setCaption(i18n("Export Layer") + '(' + ch->name() + ')');
-                fd.setMimeFilter(listMimeFilter);
-                fd.setOperationMode(KFileDialog::Saving);
-                fd.setUrl(KUrl(ch->name()));
-                if (!fd.exec()) return;
 
-                KUrl url = fd.selectedUrl();
-                QString mimefilter = fd.currentMimeFilter();
+                QString fileName = KoFileDialogHelper::getSaveFileName(m_view,
+                                                                       i18n("Export Layer") + '(' + ch->name() + ')',
+                                                                       QDesktopServices::storageLocation(QDesktopServices::PicturesLocation),
+                                                                       KoFilterManager::mimeFilter("application/x-krita", KoFilterManager::Export),
+                                                                       "",
+                                                                       "OpenDocument");
+
+                KUrl url = KUrl::fromLocalFile(fileName);
 
                 if (url.isEmpty())
                     return;
-                if (mimefilter.isNull()) {
-                    KMimeType::Ptr mime = KMimeType::findByUrl(url);
-                    mimefilter = mime->name();
-                }
+
+
+                KMimeType::Ptr mime = KMimeType::findByUrl(url);
+                QString mimefilter = mime->name();
 
 
                 KisPaintLayerSP l = KisPaintLayerSP(new KisPaintLayer(image.data(), ch->name(), OPACITY_OPAQUE_U8, *deviceIt));
diff --git a/krita/ui/dialogs/kis_dlg_file_layer.cpp b/krita/ui/dialogs/kis_dlg_file_layer.cpp
index b56d538..a09a899 100644
--- a/krita/ui/dialogs/kis_dlg_file_layer.cpp
+++ b/krita/ui/dialogs/kis_dlg_file_layer.cpp
@@ -30,6 +30,7 @@
 #include <kfiledialog.h>
 #include <kurl.h>
 
+#include <KoFileDialogHelper.h>
 #include <KoApplication.h>
 #include <KoFilterManager.h>
 
@@ -97,10 +98,12 @@ void KisDlgFileLayer::slotSelectFile()
     if (!m_basePath.isEmpty()) {
         startUrl.setPath(m_basePath);
     }
-    QString url = KFileDialog::getOpenFileName(startUrl,
-                                               mimeFilter.join(" "),
-                                               this,
-                                               i18n("Select file to use as dynamic file layer."));
+    QString url = KoFileDialogHelper::getOpenFileName(this,
+                                                      i18n("Select file to use as dynamic file layer."),
+                                                      startUrl.toLocalFile(),
+                                                      mimeFilter,
+                                                      "",
+                                                      "OpenDocument");
     if (m_basePath.isEmpty()) {
         dlgWidget.txtFileName->setText(url);
     }
diff --git a/krita/ui/dialogs/kis_dlg_preferences.cc b/krita/ui/dialogs/kis_dlg_preferences.cc
index 0292790..e3960c9 100644
--- a/krita/ui/dialogs/kis_dlg_preferences.cc
+++ b/krita/ui/dialogs/kis_dlg_preferences.cc
@@ -45,13 +45,13 @@
 #include <KoColorProfile.h>
 #include <KoApplication.h>
 #include <KoConfigAuthorPage.h>
+#include <KoFileDialogHelper.h>
 #include <KoPart.h>
 
 #include <kapplication.h>
 #include <kmessagebox.h>
 #include <kcolorbutton.h>
 #include <kcombobox.h>
-#include <kfiledialog.h>
 #include <klineedit.h>
 #include <klocale.h>
 #include <kurlrequester.h>
@@ -295,7 +295,10 @@ void ColorSettingsTab::selectOcioConfigPath()
 {
     QString filename = m_page->txtOcioConfigPath->text();
 
-    filename = KFileDialog::getOpenFileName(QDir::cleanPath(filename), "*.ocio|OpenColorIO configuration (*.ocio)", m_page);
+    filename = KoFileDialogHelper::getOpenFileName(m_page,
+                                                   i18n("Select OpenColorIO Configuration"),
+                                                   QDir::cleanPath(filename),
+                                                   QStringList("*.ocio|OpenColorIO configuration (*.ocio)"));
     QFile f(filename);
     if (f.exists()) {
         m_page->txtOcioConfigPath->setText(filename);
diff --git a/krita/ui/kis_image_manager.cc b/krita/ui/kis_image_manager.cc
index 0f10556..8aeddd3 100644
--- a/krita/ui/kis_image_manager.cc
+++ b/krita/ui/kis_image_manager.cc
@@ -19,15 +19,16 @@
 #include "kis_image_manager.h"
 
 #include <QString>
+#include <QDesktopServices>
 
 #include <kaction.h>
 #include <klocale.h>
-#include <kfiledialog.h>
 #include <kurl.h>
 #include <kactioncollection.h>
 
 #include <KoIcon.h>
 #include <KoFilterManager.h>
+#include <KoFileDialogHelper.h>
 #include <KoProgressUpdater.h>
 #include <KoUpdater.h>
 
@@ -73,8 +74,16 @@ qint32 KisImageManager::importImage(const KUrl& urlArg, bool importAsLayer)
     qint32 rc = 0;
 
     if (urlArg.isEmpty()) {
-        QString mimelist = KoFilterManager::mimeFilter("application/x-krita", KoFilterManager::Import).join(" ");
-        urls = KFileDialog::getOpenUrls(KUrl(QString()), mimelist, 0, i18n("Import Image"));
+        QStringList fileNames = KoFileDialogHelper::getOpenFileNames(m_view,
+                                                                     i18n("Import Image"),
+                                                                     QDesktopServices::storageLocation(QDesktopServices::PicturesLocation),
+                                                                     KoFilterManager::mimeFilter("application/x-krita", KoFilterManager::Import),
+                                                                     "",
+                                                                     "OpenDocument");
+        foreach(const QString &fileName, fileNames) {
+            urls << KUrl::fromLocalFile(fileName);
+        }
+
     } else {
         urls.push_back(urlArg);
     }
diff --git a/krita/ui/kis_node_manager.cpp b/krita/ui/kis_node_manager.cpp
index 0245545..3f7b0c7 100644
--- a/krita/ui/kis_node_manager.cpp
+++ b/krita/ui/kis_node_manager.cpp
@@ -18,6 +18,8 @@
 
 #include "kis_node_manager.h"
 
+#include <QDesktopServices>
+
 #include <kactioncollection.h>
 
 #include <KoIcon.h>
@@ -26,6 +28,7 @@
 #include <KoShape.h>
 #include <KoShapeLayer.h>
 #include <KoFilterManager.h>
+#include <KoFileDialogHelper.h>
 
 #include <kis_types.h>
 #include <kis_node.h>
@@ -765,27 +768,19 @@ void KisNodeManager::saveNodeAsImage()
         return;
     }
 
-    QStringList listMimeFilter = KoFilterManager::mimeFilter("application/x-krita", KoFilterManager::Export);
-    QString mimelist = listMimeFilter.join(" ");
-
-    KFileDialog fd(KUrl(QString()), mimelist, m_d->view);
-    fd.setObjectName("Export Node");
-    fd.setCaption(i18n("Export Node"));
-    fd.setMimeFilter(listMimeFilter);
-    fd.setOperationMode(KFileDialog::Saving);
+    QString filename = KoFileDialogHelper::getSaveFileName(m_d->view,
+                                                           i18n("Export Node"),
+                                                           QDesktopServices::storageLocation(QDesktopServices::PicturesLocation),
+                                                           KoFilterManager::mimeFilter("application/x-krita", KoFilterManager::Export));
 
-    if (!fd.exec()) return;
+    if (filename.isEmpty()) return;
 
-    KUrl url = fd.selectedUrl();
-    QString mimefilter = fd.currentMimeFilter();
+    KUrl url = KUrl::fromLocalFile(filename);
 
-    if (mimefilter.isNull()) {
-        KMimeType::Ptr mime = KMimeType::findByUrl(url);
-        mimefilter = mime->name();
-    }
+    if (url.isEmpty()) return;
 
-    if (url.isEmpty())
-        return;
+    KMimeType::Ptr mime = KMimeType::findByUrl(url);
+    QString mimefilter = mime->name();
 
     KisImageWSP image = m_d->view->image();
 
diff --git a/krita/ui/widgets/KisFlipbookSelector.cpp b/krita/ui/widgets/KisFlipbookSelector.cpp
index f243dc1..9384790 100644
--- a/krita/ui/widgets/KisFlipbookSelector.cpp
+++ b/krita/ui/widgets/KisFlipbookSelector.cpp
@@ -25,10 +25,10 @@
 #include <KoApplication.h>
 #include <KoIcon.h>
 #include <KoFilterManager.h>
+#include <KoFileDialogHelper.h>
 
 #include <kglobal.h>
 #include <kstandarddirs.h>
-#include <kfiledialog.h>
 #include <kurl.h>
 
 #include <QDesktopServices>
@@ -46,11 +46,12 @@ KisFlipbookSelector::KisFlipbookSelector(QWidget *parent, KisDoc2 *document)
 
 void KisFlipbookSelector::createImage()
 {
-    const QStringList mimeFilter = koApp->mimeFilter(KoFilterManager::Import);
-
-    QStringList urls = KFileDialog::getOpenFileNames(KUrl("kfiledialog:///OpenDialog"),
-                                                     mimeFilter.join(" "),
-                                                     this, i18n("Select files to add to flipbook"));
+    QStringList urls = KoFileDialogHelper::getOpenFileNames(this,
+                                                            i18n("Select files to add to flipbook"),
+                                                            QDesktopServices::storageLocation(QDesktopServices::PicturesLocation),
+                                                            koApp->mimeFilter(KoFilterManager::Import),
+                                                            "",
+                                                            "OpenDocument");
 
     if (urls.size() < 1) return;
     QApplication::setOverrideCursor(Qt::WaitCursor);
diff --git a/krita/ui/widgets/kis_color_space_selector.cc b/krita/ui/widgets/kis_color_space_selector.cc
index 9f09ad0..73bde3b 100644
--- a/krita/ui/widgets/kis_color_space_selector.cc
+++ b/krita/ui/widgets/kis_color_space_selector.cc
@@ -20,6 +20,7 @@
 
 #include "kis_color_space_selector.h"
 
+#include <KoFileDialogHelper.h>
 #include <KoColorProfile.h>
 #include <KoColorSpace.h>
 #include <KoColorSpaceRegistry.h>
@@ -37,7 +38,6 @@
 #include <QDesktopServices>
 
 #include <kcomponentdata.h>
-#include <kfiledialog.h>
 #include <kstandarddirs.h>
 #include <kglobal.h>
 #include <kio/copyjob.h>
@@ -175,8 +175,14 @@ void KisColorSpaceSelector::colorSpaceChanged()
 
 void KisColorSpaceSelector::installProfile()
 {
-    KUrl homedir(QDesktopServices::storageLocation(QDesktopServices::HomeLocation));
-    QStringList profileNames = KFileDialog::getOpenFileNames(homedir, "*.icm *.icc", this, "Install Color Profiles");
+    QStringList mime;
+    mime << "*.icm" <<  "*.icc";
+    QStringList profileNames = KoFileDialogHelper::getOpenFileNames(this,
+                                                                    i18n("Install Color Profiles"),
+                                                                    QDesktopServices::storageLocation(QDesktopServices::HomeLocation),
+                                                                    mime,
+                                                                    "",
+                                                                    "OpenDocumentICC");
 
     KoColorSpaceEngine *iccEngine = KoColorSpaceEngineRegistry::instance()->get("icc");
     Q_ASSERT(iccEngine);
diff --git a/libs/main/KoFileDialogHelper.cpp b/libs/main/KoFileDialogHelper.cpp
index 9be1719..8ae65b4 100644
--- a/libs/main/KoFileDialogHelper.cpp
+++ b/libs/main/KoFileDialogHelper.cpp
@@ -23,6 +23,7 @@
 #include <QApplication>
 #include <QClipboard>
 
+#include <kconfiggroup.h>
 #include <kmimetype.h>
 #include <klocale.h>
 
@@ -111,8 +112,10 @@ QString KoFileDialogHelper::getOpenFileName(QWidget *parent,
                                             const QString &caption,
                                             const QString &dir,
                                             const QStringList &mimeList,
-                                            const QString &defaultMime)
+                                            const QString &defaultMime, const QString uniqueName)
 {
+
+
     QString str = getFilterString(defaultMime);
     QFileDialog::Options options = 0;
 #ifdef Q_WS_X11
@@ -122,10 +125,11 @@ QString KoFileDialogHelper::getOpenFileName(QWidget *parent,
 #endif
     QString res = QFileDialog::getOpenFileName(parent,
                                                caption,
-                                               dir,
+                                               getDefaultDir(dir, uniqueName),
                                                getFilterString(mimeList),
                                                &str,
                                                options);
+    saveDefaultDir(res, uniqueName);
     return res;
 }
 
@@ -133,8 +137,10 @@ QStringList KoFileDialogHelper::getOpenFileNames(QWidget *parent,
                                                  const QString &caption,
                                                  const QString &dir,
                                                  const QStringList &mimeList,
-                                                 const QString &defaultMime)
+                                                 const QString &defaultMime, const QString uniqueName)
 {
+
+
     QString str = getFilterString(defaultMime);
     QFileDialog::Options options = 0;
 #ifdef Q_WS_X11
@@ -144,18 +150,21 @@ QStringList KoFileDialogHelper::getOpenFileNames(QWidget *parent,
 #endif
     QStringList res = QFileDialog::getOpenFileNames(parent,
                                                     caption,
-                                                    dir,
+                                                    getDefaultDir(dir, uniqueName),
                                                     getFilterString(mimeList),
                                                     &str,
                                                     options);
+    saveDefaultDir(res.first(), uniqueName);
     return res;
 }
 
 QString KoFileDialogHelper::getOpenDirectory(QWidget *parent,
                                              const QString &caption,
-                                             const QString &dir)
+                                             const QString &dir, const QString uniqueName)
 {
-    QString res = QFileDialog::getExistingDirectory(parent, caption, dir);
+    QString res = QFileDialog::getExistingDirectory(parent, caption, getDefaultDir(dir, uniqueName));
+
+    saveDefaultDir(res, uniqueName);
     return res;
 }
 
@@ -163,13 +172,13 @@ QString KoFileDialogHelper::getImportFileName(QWidget *parent,
                                               const QString &caption,
                                               const QString &dir,
                                               const QStringList &mimeList,
-                                              const QString &defaultMime)
+                                              const QString &defaultMime, const QString uniqueName)
 {
     QString res;
 #ifdef Q_OS_MAC
     QStringList result =  getFileNames(parent,
                                        caption,
-                                       dir,
+                                       getDefaultDir(dir, uniqueName),
                                        mimeList,
                                        defaultMime,
                                        QFileDialog::AcceptOpen,
@@ -188,11 +197,12 @@ QString KoFileDialogHelper::getImportFileName(QWidget *parent,
 #endif
     res = QFileDialog::getOpenFileName(parent,
                                        caption,
-                                       dir,
+                                       getDefaultDir(dir, uniqueName),
                                        getFilterString(mimeList),
                                        &str,
                                        options);
 #endif
+    saveDefaultDir(res, uniqueName);
     return res;
 }
 
@@ -200,12 +210,12 @@ QStringList KoFileDialogHelper::getImportFileNames(QWidget *parent,
                                                    const QString &caption,
                                                    const QString &dir,
                                                    const QStringList &mimeList,
-                                                   const QString &defaultMime)
+                                                   const QString &defaultMime, const QString uniqueName)
 {
 #ifdef Q_OS_MAC
     QStringList res = getFileNames(parent,
                                    caption,
-                                   dir,
+                                   getDefaultDir(dir, uniqueName),
                                    mimeList,
                                    defaultMime,
                                    QFileDialog::AcceptOpen,
@@ -220,23 +230,24 @@ QStringList KoFileDialogHelper::getImportFileNames(QWidget *parent,
 #endif
     QStringList res =QFileDialog::getOpenFileNames(parent,
                                                    caption,
-                                                   dir,
+                                                   getDefaultDir(dir, uniqueName),
                                                    getFilterString(mimeList),
                                                    &str,
                                                    options);
 #endif
+    saveDefaultDir(res.first(), uniqueName);
     return res;
 }
 
 QString KoFileDialogHelper::getImportDirectory(QWidget *parent,
                                                const QString &caption,
-                                               const QString &dir)
+                                               const QString &dir, const QString uniqueName)
 {
     QString res;
 #ifdef Q_OS_MAC
     QStringList result = getFileNames(parent,
                                       caption,
-                                      dir,
+                                      getDefaultDir(dir, uniqueName),
                                       QStringList(),
                                       QString(),
                                       QFileDialog::AcceptOpen,
@@ -248,6 +259,7 @@ QString KoFileDialogHelper::getImportDirectory(QWidget *parent,
 #else
     res = QFileDialog::getExistingDirectory(parent, caption, dir);
 #endif // Q_OS_MAC
+    saveDefaultDir(res, uniqueName);
     return res;
 }
 
@@ -255,13 +267,13 @@ QString KoFileDialogHelper::getSaveFileName(QWidget *parent,
                                             const QString &caption,
                                             const QString &dir,
                                             const QStringList &mimeList,
-                                            const QString &defaultMime)
+                                            const QString &defaultMime, const QString uniqueName)
 {
     QString res;
 #ifdef Q_OS_MAC
     QStringList result = getFileNames(parent,
                                       caption,
-                                      dir,
+                                      getDefaultDir(dir, uniqueName),
                                       mimeList,
                                       defaultMime,
                                       QFileDialog::AcceptSave,
@@ -280,10 +292,30 @@ QString KoFileDialogHelper::getSaveFileName(QWidget *parent,
 #endif
     res = QFileDialog::getSaveFileName(parent,
                                        caption,
-                                       dir,
+                                       getDefaultDir(dir, uniqueName),
                                        getFilterString(mimeList),
                                        &str,
                                        options);
 #endif // Q_OS_MAC
+    saveDefaultDir(res, uniqueName);
     return res;
 }
+
+const QString KoFileDialogHelper::getDefaultDir(const QString &defaultDir, const QString &dialogName)
+{
+    if (dialogName.isEmpty()) return defaultDir;
+
+    KConfigGroup group = KGlobal::config()->group("File Dialogs");
+    QString dir = group.readEntry(dialogName);
+    return dir.isEmpty() ? defaultDir : dir;
+
+}
+
+void KoFileDialogHelper::saveDefaultDir(const QString &fileName, const QString &dialogName)
+{
+    if (dialogName.isEmpty()) return;
+
+    KConfigGroup group = KGlobal::config()->group("File Dialogs");
+    group.writeEntry(dialogName, fileName);
+
+}
diff --git a/libs/main/KoFileDialogHelper.h b/libs/main/KoFileDialogHelper.h
index 8a508fa..4afafd4 100644
--- a/libs/main/KoFileDialogHelper.h
+++ b/libs/main/KoFileDialogHelper.h
@@ -38,53 +38,68 @@ public:
      * @brief getOpenFileName - used for open an existing document
      * @param parent The parent of the file dialog
      * @param caption Caption of the file dialog
-     * @param dir Directory when file dialog appear
+     * @param dir the default directory the file dialog shows. If uniqueName is provided, this will be replaced by the last open directory.
      * @param mimeList List of mimetypes user can select in the file dialog
      * @param selectedMime Mimetype selected by default
+     * @param uniqueName the name for the file dialog. This will be used to open the filedialog in the last open location, instead the specified directory.
+     *
      * @return The name of the entry user selected in the file dialog
+     *
      */
     static QString getOpenFileName(QWidget *parent = 0,
                                    const QString &caption = QString(),
                                    const QString &dir = QString(),
                                    const QStringList &mimeList = QStringList(),
-                                   const QString &defaultMime = QString());
+                                   const QString &defaultMime = QString(),
+                                   const QString uniqueName = QString());
 
     static QStringList getOpenFileNames(QWidget *parent = 0,
                                         const QString &caption = QString(),
                                         const QString &dir = QString(),
                                         const QStringList &mimeList = QStringList(),
-                                        const QString &defaultMime = QString());
+                                        const QString &defaultMime = QString(),
+                                        const QString uniqueName = QString());
 
     static QString getOpenDirectory(QWidget *parent = 0,
                                     const QString &caption = QString(),
-                                    const QString &dir = QString());
+                                    const QString &dir = QString(),
+                                    const QString uniqueName = QString());
 
     static QString getImportFileName(QWidget *parent = 0,
                                      const QString &caption = QString(),
                                      const QString &dir = QString(),
                                      const QStringList &mimeList = QStringList(),
-                                     const QString &defaultMime = QString());
+                                     const QString &defaultMime = QString(),
+                                     const QString uniqueName = QString());
 
     static QStringList getImportFileNames(QWidget *parent = 0,
                                           const QString &caption = QString(),
                                           const QString &dir = QString(),
                                           const QStringList &mimeList = QStringList(),
-                                          const QString &defaultMime = QString());
+                                          const QString &defaultMime = QString(),
+                                          const QString uniqueName = QString());
 
     static QString getImportDirectory(QWidget *parent = 0,
                                       const QString &caption = QString(),
-                                      const QString &dir = QString());
+                                      const QString &dir = QString(),
+                                      const QString uniqueName = QString());
 
     static QString getSaveFileName(QWidget *parent = 0,
                                    const QString &caption = QString(),
                                    const QString &dir = QString(),
                                    const QStringList &mimeList = QStringList(),
-                                   const QString &defaultMime = QString());
+                                   const QString &defaultMime = QString(),
+                                   const QString uniqueName = QString());
 
 private:
-    static const QString getFilterString(const QStringList &mimeList,
-                                         bool withAllSupported = true);
+
+    static const QString getDefaultDir(const QString &defaultDir, const QString &dialogName);
+    static void saveDefaultDir(const QString &fileName, const QString &dialogName);
+
+    static const QString getFilterString(const QStringList &mimeList, bool withAllSupported = true);
+
     static const QString getFilterString(const QString &defaultMime);
+
     static QStringList getFileNames(QWidget *parent,
                                     const QString &caption,
                                     const QString &dir,
diff --git a/libs/main/KoMainWindow.cpp b/libs/main/KoMainWindow.cpp
index 499b0a0..233b99f 100644
--- a/libs/main/KoMainWindow.cpp
+++ b/libs/main/KoMainWindow.cpp
@@ -1300,26 +1300,29 @@ void KoMainWindow::slotFileOpen()
     //                                       KoFilterManager::Import,
     //                                       KoServiceProvider::readExtraNativeMimeTypes());
 
-    KConfigGroup group = KGlobal::config()->group("File Dialogs");
-    QString defaultDir = group.readEntry("OpenDialog");
-    if (defaultDir.isEmpty())
-        defaultDir = QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation);
     QString url;
     if (!isImporting()) {
         url = KoFileDialogHelper::getOpenFileName(this,
                                                   i18n("Open Document"),
-                                                  defaultDir,
-                                                  mimeFilter);
+                                                  (qApp->applicationName().contains("krita") || qApp->applicationName().contains("karbon"))
+                                                     ? QDesktopServices::storageLocation(QDesktopServices::PicturesLocation)
+                                                     : QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation),
+                                                  mimeFilter,
+                                                  "",
+                                                  "OpenDocument");
     } else {
         url = KoFileDialogHelper::getImportFileName(this,
                                                     i18n("Import Document"),
-                                                    defaultDir,
-                                                    mimeFilter);
+                                                    (qApp->applicationName().contains("krita") || qApp->applicationName().contains("karbon"))
+                                                        ? QDesktopServices::storageLocation(QDesktopServices::PicturesLocation)
+                                                        : QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation),
+                                                    mimeFilter,
+                                                    "",
+                                                    "OpenDocument");
     }
 
     if (url.isEmpty())
         return;
-    group.writeEntry("OpenDialog", url);
 
     (void) openDocument(KUrl(url));
 }
diff --git a/libs/main/KoOpenPane.cpp b/libs/main/KoOpenPane.cpp
index 769c340..d3ff060 100644
--- a/libs/main/KoOpenPane.cpp
+++ b/libs/main/KoOpenPane.cpp
@@ -134,7 +134,7 @@ KoOpenPane::KoOpenPane(QWidget *parent, const KComponentData &componentData, con
     d->m_componentData = componentData;
     d->setupUi(this);
 
-    m_mimeFiletr = mimeFilter;
+    m_mimeFilter = mimeFilter;
     d->m_openExistingButton->setText(i18n("Open Existing Document"));
 
     connect(d->m_openExistingButton, SIGNAL(clicked()),
@@ -198,15 +198,14 @@ KoOpenPane::~KoOpenPane()
 
 void KoOpenPane::openFileDialog()
 {
-    KConfigGroup group = KGlobal::config()->group("File Dialogs");
-    QString defaultDir = group.readEntry("OpenDialog");
-    if (defaultDir.isEmpty())
-        defaultDir = QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation);
     QString url = KoFileDialogHelper::getOpenFileName(this,
-                                               i18n("Open Existing Document"),
-                                               defaultDir,
-                                               m_mimeFiletr);
-    group.writeEntry("OpenDialog", url);
+                                                      i18n("Open Existing Document"),
+                                                      (qApp->applicationName().contains("krita") || qApp->applicationName().contains("karbon"))
+                                                        ? QDesktopServices::storageLocation(QDesktopServices::PicturesLocation)
+                                                        : QDesktopServices::storageLocation(QDesktopServices::DocumentsLocation),
+                                                      m_mimeFilter,
+                                                      "",
+                                                      "OpenDialog");
     emit openExistingFile(KUrl(url));
 }
 
diff --git a/libs/main/KoOpenPane.h b/libs/main/KoOpenPane.h
index 01ea232..3e9a56a 100644
--- a/libs/main/KoOpenPane.h
+++ b/libs/main/KoOpenPane.h
@@ -97,7 +97,7 @@ protected:
     virtual void dropEvent(QDropEvent * event);
 
 private:
-    QStringList m_mimeFiletr;
+    QStringList m_mimeFilter;
 
     KoOpenPanePrivate * const d;
 };
diff --git a/sheets/dialogs/CSVDialog.cpp b/sheets/dialogs/CSVDialog.cpp
index aa60405..4e9d7ed 100644
--- a/sheets/dialogs/CSVDialog.cpp
+++ b/sheets/dialogs/CSVDialog.cpp
@@ -77,7 +77,10 @@ CSVDialog::CSVDialog(QWidget* parent, Selection* selection, Mode mode)
     } else if (m_mode == File) {
         //setWindowTitle(i18n("Inserting Text File"));
         m_filename = KoFileDialogHelper::getImportFileName(parent, i18n("Import CSV Data File"),
-                                                        "", QStringList(i18n("CSV data files (*.csv)")));
+                                                           "",
+                                                           QStringList(i18n("CSV data files (*.csv)")),
+                                                           "",
+                                                           "OpenDocument");
         //cancel action !
         if (m_filename.isEmpty()) {
             enableButton(Ok, false);
